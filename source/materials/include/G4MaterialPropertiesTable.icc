//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
//
//
////////////////////////////////////////////////////////////////////////
//
// G4MaterialPropertiesTable inline definitions
//
// File:        G4MaterialPropertiesTable.icc
// Version:     1.0
// Created:     1996-02-08
// Author:      Juliet Armstrong
// Updated:     moved to inline
//
////////////////////////////////////////////////////////////////////////

inline
void G4MaterialPropertiesTable::AddConstProperty(const G4String& key,
                                                 G4double PropertyValue)
{
  // Provides a way of adding a constant property to the Material Properties
  // Table given a key
  if (std::find(G4MaterialConstPropertyName.begin(),
                G4MaterialConstPropertyName.end(), key) ==
       G4MaterialConstPropertyName.end()) {
    G4MaterialConstPropertyName.push_back(key);
  }
  G4int index = GetConstPropertyIndex(key);

  MCP[index] = PropertyValue;
}

inline
void G4MaterialPropertiesTable::AddConstProperty(const char *key,
                                                 G4double PropertyValue)
{
  // Provides a way of adding a constant property to the Material Properties
  // Table given a key
  AddConstProperty(G4String(key), PropertyValue);
}

inline
void G4MaterialPropertiesTable::RemoveConstProperty(const G4String& key)
{
  G4int index = GetConstPropertyIndex(key);

  MCP.erase(index);
}

inline
void G4MaterialPropertiesTable::RemoveConstProperty(const char *key)
{
  GetConstPropertyIndex(G4String(key));
}

inline
void G4MaterialPropertiesTable::RemoveProperty(const G4String& key)
{
  G4int index = GetPropertyIndex(key);
  MP.erase(index);
}

inline
void G4MaterialPropertiesTable::RemoveProperty(const char *key)
{
  RemoveProperty(G4String(key));
}
