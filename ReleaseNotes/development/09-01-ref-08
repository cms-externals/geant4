
                       geant4-09-01-ref-08
                       ===================

Some of the development/fixes included since the last development tag are:

 o Updated mass and width of particles according to PDG-2008.
 o Added methods in G4NeutronTrackingCut for directly defining time and
   energy limits.
 o Added new EM classes with stopping data G4MaterialStopping,
   G4SimpleMaterialStopping and G4IronStopping.

---------- Reference-tag 'Release Notes' -----------

(**) Fixes included in release 9.1.p03

Summarised, the list of changes is the following:

digits_hits                                      digits_hits-V09-01-00      (**)
-----------
- Fixed a bug in G4ScoringBox for the use of G4PVDivision
  and G4VScoreWriter for indexing scheme in GetIndex() method.

event                                            event-V09-01-01            (**)
-----
- Removed some redundant semicolons in G4SPSAngDistribution header...

geometry/magnetifield                            field-V09-01-02
---------------------
- Revised signature of G4ChordFinder::FinderNextChord(), making 'FieldTrack'
  argument passed a reference.

geometry/management                              geommng-V09-01-08
-------------------
- G4VSolid: promote copy-constructor and assignment operator to public      (**)
  to cope with specific use-case in ATLAS (see problem report #1023).
- G4VSolid: explicitely reserve memory for polygon vectors in clipping
  algorithm to help reducing memory footprint.

geometry/navigation                              geomnav-V09-01-05          (**)
-------------------
- G4PropagatorInField: correction to LocateIntersectionPoint() algorithm
  to ensure that endpoints are not further apart in space than on the curve
  due to different errors in the integration.

geometry/solids/CSG                              geom-csg-V09-01-05
-------------------
- G4Tubs: implemented first speed improvements and corrections from joint
  code review of G4Tubs class. Cached computation for half-tolerance and
  other cached values.

geometry/solids/specific                         geom-specific-V09-01-16
------------------------
- Corrected algorithm in G4TriangularFacet::GetPointOnFace() according to
  suggestion advanced in problem report #1025. Fixes a problem of false
  overlaps detection related to G4ExtrudedSolid and G4TessellatedSolid.
- G4VFacet: corrected increment of indeces in operator==(), following       (**)
  problem report #1024.

global                                           global-V09-01-13
------
- Corrected initialisation of vectors to conform to definition in
  G4PhysicsVector, and added protections against empty vectors.
- Corrected definition of copy-constructor and operator=() in G4PhysicsVector
  and added corresponding definitions in derived classes, where needed.

particles                                        particles-V09-01-06
---------
- Updated mass and width according to PDG-2008.
- Avoid direct comparison of strings in method G4IonTable::IsIon().

physics_lists                                    phys-lists-V09-01-12
-------------
- G4NeutronTrackingCut: added methods for directly defining time and
  energy limits.
- G4HadronInelasticQBBC, QBBC: using FTF (as default) with Binary Cascade
  and improved printout.
- Added temporary variant to QBBC, equivalent to QGSP_BERT without LHEP
  for protons, neutrons and pions.

processes/decay                                  decay-V09-01-03
---------------
- Fixed problem of memory overwrite in G4DecayWithSpin.

processes/electromagnetic/standard               emstand-V09-01-34
----------------------------------
- Added new classes with stopping data G4MaterialStopping,
  G4SimpleMaterialStopping and G4IronStopping.
- Improved verbose output for processes.
- G4ionIonisation: use the same low-energy model for He ions and GenericIons,
  like in 9.2-beta.
- G4WentzelVIModel: fixed bug in lateral displacement.
- G4UrbanMscModel2: fixed NaN in sampling of cosine theta for 50 GeV e-.
- G4UrbanMscModel, G4UrbanMscModel2, G4UrbanMscModel90: fixed cases of string
  comparison when compute transport cross-sections, compare masses instead.
- G4eBremsstrahlungModel: corrected Migdal constant to be set to the value as
  in G4eBremsstrahlungRelModel.
- G4eBremsstrahlungRelModel: define threshold energy for LPM effect; fixed LPM
  calculation; define Thomas-fermi FF (ala Tsai); some speed improvements.
- G4IonFluctuations: do not use Poisson sampling.
- G4BetheBlochModel, G4BraggModel, G4BraggIonModel: added methods
  GetParticleCharge(), GetChargeSquareRatio(), CorrectionsAlongStep()
  needed for ions; defining low and high energy limits inside the model.
- G4ionIonisation, G4hIonisation: removed InitialiseMassCharge() and
  CorrectionsAlongStep() methods; limits of kinetic energy for models now
  taken from the base class and from models; separated treatment of He ions.
- G4WaterStopping: use mass number instead of atomic mass.

processes/electromagnetic/utils                  emutils-V09-01-29
-------------------------------
- G4VEnergyLossProcess: added pointer to current G4VEmModel; removed method
  CorrectionsAlongStep(), using instead corresponding method of the model;
  improved verbose output.
- G4VEmModel:
  o Minor optimisations of SelectRandomAtom() and SelectIsotope().
  o Added methods GetParticleCharge(), GetChargeSquareRatio(),
    CorrectionsAlongStep() and ActivateNuclearStopping() needed for simulation
    of ion transport.
  o Use STL vector for cross sections instead of array.
- G4EmCorrections:
  o Added interfaces to effective charge.
  o Do not compute ion corrections if G4hIonisation process is used for ions.
- G4VEmProcess, G4VMultipleScattering, G4VEnergyLossProcess: use new
  DumpModelList() method from G4EmModelManager in the verbosity output.
- G4VEmFluctuationModel: added method SetParticleAndCharge().
- G4EmModelManager: fixed crash in destructor when verbosity > 1;
  fixed selection of models per energy; updated printout with DumpModelList()
  method.
- G4EmElementSelector: update usage of methods SetupMaterial() and
  ComputeCrossSectionPerAtom().
- G4EmCorrections: dEdx data for ions are initialised at the start of a run
  for materials used in geometry; updated search for ion/material pairs.
- G4EmCalculator: improved printout.

processes/hadronic
------------------
- cross_sections (hadr-cross-V09-01-04)
  o G4CrossSectionDataStore: added method SampleZandA(), returning a G4Element
    and filling G4Nucleus.
  o G4PiNuclearCrossSection: commented out debug calls to G4ping.
- management (hadr-man-V09-01-06)
  o G4HadronicProcess: some cleanup; use method SampleZandA() to select an
    isotope and avoid use debug local NanCheck(); avoid checking environment
    variables at run-time; directly fill G4HadronicWhiteBoard; implemented
    PostStepDoIt() and DumpPhysicsTable() methods.
  o G4HadronInelasticProcess: use methods from the base class.
  o G4HadronicProcessStore: improved printout.
- models/cascade (hadr-casc-V09-01-06)
  o G4ElementaryParticleCollider: in method GenerateMultiplicity(), removed
    large_cut which increases multiplicity from 3 to 4 abruptly at 4 GeV
    and above. This caused a sharp drop-off in the single pion spectra from
    pH reactions. The effect in heavier nuclei is small.
  o Introduced simple wrapper class G4CascadeMomentum meant to replace usage
    of std::vector<double> in the cascade code, to reduce memory allocations.
    Modified cascade code accordingly.
- models/chiral_inv_phase_space/interface (hadr-chips-inter-V09-01-07)
  o G4QCaptureAtRest: added registration in G4HadronicProcessStore
    and PrintInfo() by adding PreparePhysicsTable() and BuildPhysicsTable().
  o G4GammaNuclearReaction: moved implementations from header to source
    and added ID name "CHIPS".
  o G4ElectroNuclearReaction: moved instantiation of HE model to constructor
    from run time and added ID name "CHIPS".
- models/de_excitation (hadr-deex-V09-01-13)
  o Upgrades to evaporation and handler.
- models/photolepton_hadron/muon_nuclear (hadr-munuclear-V09-01-00)
  o G4MuNuclearInteraction: added SubType and registration in the
    G4HadronicProcessStore; added PreparePhysicsTable() method; some code
    cleanup.
- models/neutron_hp (hadr-hpn-V09-01-20)
  o Added protection for negative energy results in very low energy
    (1E-6 eV) scattering in G4NeutronHPElasticFS.
  o Fixed problem in G4NeutronHPProduct resulting in too many secondaries
    production in nd rections.
  o Added protection in G4NeutronHPName for selecting data in hydrogen and
    alpha.
  o Fixed case of definition of G4PhysicsVecotor of length zero in
    G4NeutronHPIsoData.
- models/parton_string/qgsm (hadr-qgsm-V09-01-01)
  o Fixed logic in G4QGSParticipants algorithm: avoid usage of iterator
    decrementing in loops. Addresses problem report #1018.
- models/pre_equilibrium (hadr-pre-V09-01-09)
  o Fixed cases of floating point overflow when using pre-compound in       (**)
    combination with binary-cascade; reviewed algorithm in method
    G4PreCompoundEmission::rho().
- processes (hadr-proc-V09-01-01)
  o  G4HadronElasticProcess, G4HadronCaptureProcess, and
     G4HadronFissionProcess: use PostStepDoIt() and DumpPhysicsTable() from
     the base class G4HadronicProcess.
- stopping (hadr-stopping-V09-01-03)
  o G4MuonMinusCaptureAtRest: added registration in G4HadronicprocessStore
    and PrintInfo() by adding PreparePhysicsTable() and BuildPhysicsTable()
    methods.

processes/scoring                                procscore-V09-01-01
-----------------
- Correction in copying non-ionizing energy deposit in G4Step.

examples                                         examples-V09-01-08
--------
- Updated reference outputs.
- advanced/hadrontherapy (hadrontherapy-V09-01-06)
  o Corrections in the Low Energy Electromagnetic physic lists.
- extended/electromagnetic/TestEm1 (testem1-V09-01-05)
- extended/electromagnetic/TestEm2 (testem2-V09-01-05)
- extended/electromagnetic/TestEm3 (testem3-V09-01-07)
- extended/electromagnetic/TestEm4 (testem4-V09-01-03)
- extended/electromagnetic/TestEm5 (testem5-V09-01-08)
- extended/electromagnetic/TestEm6 (testem6-V09-01-02)
- extended/electromagnetic/TestEm7 (testem7-V09-01-12)
  o Changed default histograms format.
- extended/electromagnetic/TestEm9 (testem9-V09-01-07)
  o Added control on number of events with Edep < 80%.
  o Use 'double' for number of steps instead of 'int'.
  o Changed default histograms format.
- extended/electromagnetic/TestEm11 (testem11-V09-01-04)
- extended/electromagnetic/TestEm12 (testem12-V09-01-05)
- extended/electromagnetic/TestEm14 (testem14-V09-01-03)
- extended/electromagnetic/TestEm15 (testem15-V09-01-04)
- extended/electromagnetic/TestEm16 (testem16-V09-01-02)
- extended/electromagnetic/TestEm17 (testem17-V09-01-04)
- extended/electromagnetic/TestEm18 (testem18-V09-01-04)
  o Changed default histograms format.
- extended/hadronic/Hadr01 (exhadr01-V09-01-03)
  o Improved physics-lists output.
- extended/medical/fanoCavity (fano-V09-01-03)
- extended/medical/fanoCavity2 (fano2-V09-01-03)
  o Changed default histograms format.
- persistency (persistencyEx-V09-01-00)
  o Added examples set for GDML plugin module: new example showing how to
    use GDML module for reading and writing; also showing how to import
    STEP Tools files.
  o Imported old GDML example placed inside extended/gdml.
- novice/N02 (exampleN02-V09-01-02)
  o PhysicsList: added method AddStepMax() for G4StepLimiter.
  o DetectorConstruction: added method SetMaxStep().
  o DetectorMessenger: added command /N02/det/stepMax.

tests                                            tests-V09-01-08
-----
- Updated reference outputs and tools.
- test11 (test11-V09-01-00)
  o Added thermal materals in test.
  o Added thermal scatterings and dump neutron cross sections.
- tests/test31 (test31-V09-01-03)
  o Updated PhysLists: cut and step limit definition.
- tests/test44 (test44-V09-01-02)
  o Fixed bug in run.csh script
