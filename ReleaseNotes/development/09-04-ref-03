
                       geant4-09-04-ref-03
                       ===================

Major development/fixes included since the last development tag are:

 o Fix in G4LogicalVolume::AddDaughter() for proper propagation settings
   of local field manager, to avoid forcing propagation to daughters
   downstream when a local field manager is set already for them.
 o Fix for scorers used for cylindrical mesh, requiring computation of
   cubic volume or surface area.
 o New version of multiple-scattering model G4UrbanMscModel95, providing
   improved sampling of angular distribution tail, better sampling of lateral
   displacement and true-step length.
 o Moved all Geant4-DNA classes to new sub-module, with new data set
   G4LEDATA-6.21.
 o Added anti-triton to anti-barions to physics-lists builders. Use default
   energy limit for anti-barions, i.e. up o 100 TeV.
 o Developed infrastructure to support using Bertini as a "rescattering"
   model for the output of the FTF simulation.
 o Added E/p checking limits to hadronic models to abilitate centralized
   energy non-conservation checks.


---------- Reference-tag 'Release Notes' -----------

(o)  Fixes included in release 9.4.p01
(+)  Fixes included in release 9.4.p02
(*)  Fixes included in release 9.4.p03

Summarised, the list of changes is the following:

config                                           config-V09-04-02           (+)
------
- Fixed limitation of string argument length in liblist.c program.
  Addressing problem report #1033.
- Added new processes/electromagnetic/dna module to scripts.

digits_hits                                      digits_hits-V09-04-04      (+)
-----------
- Fixed scorers used for cylindrical mesh that require cubic volume
  or surface area.
- Fixed scoring meshes for visualizing scores of very few entries.

interfaces                                       interfaces-V09-04-01       (+)
----------
- Fix in G4VBasicShell::ApplyShellCommand() for substring exact comparisons;
  addressing problem report #1180.
- Removed obsolete Qt3 code and avoid inclusion of OGL flags in compilation.

geometry/management                              geommng-V09-04-01          (+)
-------------------
- Fix in G4LogicalVolume::AddDaughter() for proper propagation settings
  of local field manager. Avoid forcing propagation to all daughters when
  a local field manager is set already for the new daughter.
  Addressing problem report #1183.
- Use internal G4 header for physical constants in meshdefs.h

source/geometry/solids/BREPS                     breps-V09-04-00            (+)
----------------------------
- Use G4Transform3D type in place of native CLHEP type.

source/global                                    global-V09-04-04           (+)
-------------
- Added G4Rep3x3 typedef to CLHEP::HepRep3x3 in G4RotationMatrix.hh.
- Added more G4 types for random classes in Randomize.hh.
- Use G4UniformRand() in G4Poisson.

graphics_reps                                    greps-V09-04-02            (*)
-------------
- Consistently make use of G4 types in HepPolyhedron and BooleanProcessor,
  to allow for centralized control of CLHEP types.

materials                                        materials-V09-04-03
---------
- G4Material: added base-material pointer and corresponding methods; added
  extra protections against incorrect mass fraction during material
  construction.
- G4NistMaterial: added constructor of a material using variable density;
  reduced size of internal vectors. Cleanup in methods to build materials
  in G4NistMaterialBuilder.
- G4IonisParamMat: use mean ionisation potential provided by user in
  computation of density effect
- Added new class G4ElementData, data structure for cross-sections, shell
  and isotope cross-sections.
- Minor fixes for Coverity warnings in G4ExtDEDXTable.

particles                                        particles-V09-04-02        (+)
---------
- Modified PDGCodeChecker to allow setting of PDG code for neutron balls.
- Fix in G4ParticleDefinition::SetApplyCutsFlag() to get rid of unnecessary
  warning messages for proton.
- Fixed issues reported by Coverity.

persistency/ascii                                ascii-V09-04-02            (+)
-----------------
- Use G4 types for 3-vectors and 3x3 rotations.

physics_lists                                    phys-lists-V09-04-14
-------------
- G4HadronElasticPhysicsHP, G4HadronElasticPhysicsXS: added anti_nuclei,
  reshaped code as in G4HadronElasticPhysics
- G4HadronElasticPhysicsLHEP: use G4WHadronElasticProcess to allow not to
  kill primary after scattering.
- Added anti-triton to anti-barions. Use default energy limit for
  anti-barions, i.e. up o 100 TeV
- G4EmStandardPhysics_option2: use updated G4UrbanMscModel95 model for e+-.
- G4EmStandardPhysics_option3: experimental change of options: reduced
  low-energy limit to 10 eV; reduced StepFunction parameters per particle type;
  use G4DummyModel by default. Use updated G4UrbanMscModel95 model for e+-.
- Fixed coverity issues in many files; most were uninitialised data members
  for processes/models. LBE not fixed, requires bigger rework to avoid leaks
  for processes at program end.
- Added electromagnetic/dna module dependencies.

processes/electromagnetic/dna                    dna-V09-04-02
-----------------------------
- New module with Geant4-DNA classes imported from 'lowenergy' module.

processes/electromagnetic/lowenergy              emlowen-V09-04-22
-----------------------------------
- Moved all Geant4-DNA classes to external module.
- Added G4CrossSectionDataSet table in G4AnalyticalEcpssrKCrossSection.
- Bug fixes to PIXE and de-excitation code.
- Commented ionization classes for better clarity.
- Requires new data set 6.21 of G4LEDATA.

processes/electromagnetic/polarisation           empolar-V09-04-00          (+)
--------------------------------------
- G4ePolarizedIonisation: cleared use of obsolete MinCutEnergy() method.

processes/electromagnetic/standard               emstand-V09-04-12
----------------------------------
- G4UrbanMscModel95: new version of multiple-scattering model providing
  improved sampling of the tail of angular distribution, better sampling
  of lateral displacement and true-step length.
- G4UrbanMscModel90, G4UrbanMscModel92, G4UrbanMscModel93,
  G4UrbanMscModel95, G4GoudsmitSaundersonMscModel,
  G4WentzelVIModel: use G4VMscModel methods to compute range and inverse range.
- G4PAIySection: added method ComputeLowEnergyCof() allowing for extended
  low energy limit of the model down to 10 eV.
- General cleanup: cleared usage of obsolete MinEnergyCut() methods, improved
  comments.
- G4PhotoElectricEffect: use G4PEEffectFluoModel as default.
- G4KleinNishinaModel: use dynamic selection between high energy sampling and
  sampling with Doppler broadening.
- G4GoudsmitSaundersonMscModel: restored to version of 9.3-ref05            (+)

processes/electromagnetic/utils                  emutils-V09-04-11
-------------------------------
- G4VMscModel: updated signature of GetRange() and GetEnergy() methods.
  Added Get/Set method for ionisation process; use these methods at run time
  in G4VMultipleScattering.
  Added protected method for common computation of range and energy for all
  multiple-scattering models. Removed obsolete method MinEnergyCut().
- G4VMultipleScattering: fixed problem of initialisation of true step length
  when multiple-scattering model is inactive (needed for DNA Phsyics List).
- Updated G4VAtomDeexcitation methods names; created G4AtomicShellEnumerator.
  G4EmProcessOptions: improved names of methods for deexcitation.
- G4EmProcessOptions, G4EnergyLossMessenger, G4LossTableManager,
  G4VAtomDeexcitation: cleanup options for deexcitation

processes/hadronic
------------------
- cross_sections (hadr-cross-V09-04-04)
  o G4CrossSectionDataStore: fix in DumpPhysicsTable() method, responsible for
    incorrect ion cross-sections values when invocated.
  o G4IonsShenCrossSection: extended energy range up to 100 TeV.
  o G4IonsShenCrossSection, G4IonsSihverCrossSection, G4IonsKoxCrossSection:
    moved constructor, destructor and virtual methods to source.
- management (hadr-man-V09-04-03)
  o Modified E/p checking to take the tighter limit of process and model.
- models/binary_cascade (had-binary-V09-04-00)
  o Set E/p checking limits for energy non-conservation checks.
- models/cascade (hadr-casc-V09-04-03-01)
  o Developed infrastructure to support using Bertini as a "rescattering"
    model for the output of the FTF simulation.
  o Modified G4NucleiModel for parameterisation of "rescaled" nuclear model
    parameters.
  o Simplified cascade test-and-repeat loops; do four-momentum balancing with
    nuclear fragment, now used exclusively as G4Fragment, at end of cascade,
    not after de-excitation.
- models/de_excitation (hadr-deex-V09-04-03)
  o G4ExcitationHandler: fix for Fermi break-up products de-excitation.
    General code cleanup.
- models/management (hadr-man-V09-04-00)
  o E/p checking extended to allow string models to set limits;
    GetEnergyMomentumCheckLevels() made virtual in G4HadronicInteraction,
    and implemented to query string model in G4VHighEnergyGenerator.
  o Added data member in G4VIntraNuclearTransportModel with related accessor
    methods to store/retrieve original projectile.
- models/neutron_hp (hadr-hpn-V09-04-00)                                    (+)
  o Bug fix in G4NeutronHPDiscreteTwoBody for MF=6, LAW=2 case.
- models/parton_string/qgsm (hadr-qgsm-V09-04-00)
  o Set limits for E/p checking.
- models/theo_high_energy (had-theo-HE-V09-04-00)
  o Added GetEnergyMomentumCheckLevel() method to G4TheoFSGenerator. 
  o Store primary particle, so that cascade in Propagate() has access.
- processes (hadr-proc-V09-04-03)
  o Added missing process for anti-triton, G4AntiTritonInelasticProcess.

processes/management                             procman-V09-04-01          (+)
--------------------
- Cleared compilation warnings from G4VProcess header for parameter set
  but not used. Removed few extra semi-colons...

track                                            track-V09-04-00
-----
- Added GetSecondaryInCurrentStep() method in G4Step.
- Fixed some problems reported by Coverity.                                 (+)

visualization/HepRep                             vis-HepRep-V09-04-00       (+)
--------------------
- Use G4RotationMatrix typedef instead of native CLHEP type in
  G4HepRepFileSceneHandler.

examples                                         examples-V09-04-03
--------
- Updated reference outputs.
- advanced/microdosimetry (microdosimetry-V09-04-00)
  o Switched to G4ionIonisation and 5 MeV proton.
- advanced/xray_fluorescence (XrayFluo-V09-04-01)
  o Migrated physicslist to standard EM+Fluo.
  o Added several classes (XrayFluoPhysListEmStandardFLUO, XrayFluoStepMax
    and XrayFluoStepMaxMessenger) and adapted code accordingly for use.
- extended/electromagnetic/TestEm2 (testem2-V09-04-00)
- extended/electromagnetic/TestEm3 (testem3-V09-04-01)
  o Updated PhysListEmStandard for de-excitation. Set lowest production cut
    to 100 eV in PhysicsList.
  o Updated SteppingVerbose and vis.mac.
- extended/electromagnetic/TestEm5 (testem5-V09-04-05)
  o Updated PhysListEmStandard for de-excitation. Set lowest production cut
    to 100 eV in PhysicsList.
  o PhysListEmStandardWVI: fixed memory corruption.
  o Added data for hanson.mac.
- extended/electromagnetic/TestEm7 (testem7-V09-04-03)
  o Updated PhysListEmStandard for de-excitation. Set lowest production cut
    to 100 eV in PhysicsList.
  o Removed calls to obsolete methods in PhysListEmStandardNR.
    Cleaned up options also in PhysListEmStandardSS.
- extended/electromagnetic/TestEm11 (testem11-V09-04-02)
  o Updated PhysListEmStandard for de-excitation. Set lowest production cut
    to 100 eV in PhysicsList.
  o Allow several absorbers to DetectorConstruction.
  o Modified RunAction, SteppingAction, SteppingVerbose, DetectorMessenger.
  o HistoManager and Messenger: removed 'csda' and 'stepMax' computation.
  o Updated all macros and Readme.
- extended/electromagnetic/TestEm12 (testem12-V09-04-02)
  o Reduced statistic in TestEm12.in.
  o Removed obsolete modifiers in PhysListEmStandard.
- extended/hadronic/Hadr01 (exhadr01-V09-04-00)                             (+)
  o Fixed typo in printout.
- extended/hadronic/Hadr02 (exhadr02-V09-04-02)
  o New example providing simulation of ion beam interaction with different
    targets. Hadronic aspects of beam target interaction are demonstrating in
    the example including longitudinal profile of energy deposition, spectra
    of secondary  particles, isotope production spectra.
- extended/optical/wls (WLS-V09-04-00)                                      (o)
  o Added missing inclusion of <ctime> in WLSRunAction, to fix compilation
    on Windows.
- extended/radioactivedecay/rdecay02 (rdecay02-V09-04-01)
  o Corrected pre-processor lines in exrdmHisto.

tests                                            tests-V09-04-03
-----
- Updated reference outputs and tools.
- test02 (test02-V09-04-00)
- test11 (test11-V09-04-02)
- test12 (test12-V09-04-01)
- test13 (test13-V09-04-00)
- test15 (test15-V09-04-00)
- test16 (test16-V09-04-00)
- test21 (test21-V09-04-00)
- test23 (test23-V09-04-00)
  o Corrected GNUmakefile_hadronic_exerciser to work with global shared libs.
- test30 (test30-V09-04-01)
  o Cleanup for ions and elastic in main().
  o Test30Physics: moved elastic to main(), added "bertini_preco".
- test56 (test56-V09-04-00)
  o New test to study transmission, absorption and reflexion of particles
    and effects of multiple scattering through a single, thin or thick, layer
    of material.
