
                       geant4-09-02-ref-09
                       ===================

Some of the development/fixes included since the last development tag are:

 o Added support for the GDML 'assembly' tag, implementing assemblies of
   simple placements through G4AssemblyVolume.
 o Improved implementation in G4VRangeToEnergyConverter for method
   ConvertCutToKineticEnergy(); measured a factor 2 to 3 improvement in
   initialisation speed when building physics tables.
 o New implementation for data loading and interpolation methods in
   low-energy electromagnetic module.
 o Improvements on memory management for the Bertini Cascade hadronic model.
 o Implemented migration to the hadronic model design of elastic scattering
   for coherent_elastic.
 o Reviewed hadrontherapy advanced example and new extended example for
   medical physics for electron scattering.


---------- Reference-tag 'Release Notes' -----------

(o)  Fixes included in release 9.2.p03

Summarised, the list of changes is the following:

config                                           config-V09-02-10
------
- Darwin-g++.gmk: added paths to $QTHOME/include and $QTHOME/lib to          (o)
  setup for Qt4 configuration.

event                                            event-V09-02-03
-----
- Improved logic in G4SmartTrackStack implementation.
- Added UI comand /event/stack/verbose providing a short report of peak
  number of tracks in the urgent stack.

geometry/management                              geommng-V09-02-02           (o)
-------------------
- Fixed implementation of G4LogicalVolume::TotalVolumeEntities() to become
  invariant to call sequence. Addressing problem report #1082.

geometry/solids/specific                         geom-specific-V09-02-07     (o)
------------------------
- G4Ellipsoid: refined fix in DistanceToIn(p,v) for points located on the
  curved surface, and correct treatment of geometrical tolerance.
  Addresses problem report #1076.

geometry/volumes                                 geomvol-V09-02-02           (o)
----------------
- Fix in G4PVParameterised::CheckOverlaps() to not modify daughter volume
  transformation matrix for application to points in the daughter's frame.
  Adopt Inverse() instead of Invert() in call to G4AffineTransform.
  Addresses problem report #1078.
- Added missing implementation for composing G4AssemblyVolume constructor.

materials                                        materials-V09-02-09
---------
- Improved implementation of UI commands in G4NistManager, G4NistMessenger
  and G4NistElementBuilder.
- G4Element: added method GetNbOfShellElectrons() returning the number of
  electrons on a shell.

particles                                        particles-V09-02-12
---------
- Fixed bug in G4IonTable::FindIon(); use std::multimap instead of std::map.
- Fixed bug in G4IonTable::CreateIon(); removed deletion of G4IsotopeProperty
  pointed object.
- Added check on application state in the constructor of G4ParticleDefinition.
- Use 'sstream' instead of 'strstream' in test/checkParticles command
  implementation.
- Clean up codes for DecayChannels.

persistency/gdml                                 gdml-V09-02-16
----------------
- Added support for the GDML 'assembly' tag, implementing assemblies of
  simple placements through G4AssemblyVolume.

physics_lists                                    phys-lists-V09-02-25
-------------
- Modified EM standard physics-lists: return to 9.2 configuration for
  G4EmStandardPhysics; use 'ApplyCuts=true' in G4EmStandardPhysics_option1;
  use G4eMultipleScattering for e+- in G4EmStandardPhysics_option2.
- Added high energy limit to e- models for better clarity in
  G4EmLivermorePhysics and G4EmLivermorePolarizedPhysics.

processes/cuts                                   procuts-V09-02-06
--------------
- G4VRangeToEnergyConverter:                                                 (o)
  o Modified implementation of ConvertCutToKineticEnergy() to improve
    performance. Measured a factor 2 to 3 improvement in initialisation
    speed when building physics tables.
  o Modified BuildRangeVector() where integration is perfomed in this method
    (i.e. no longer using RangeXXSimpson methods). Extended for e+/e-.
  o Changed 'TotBin' to be constant (i.e. same for all converters) and set to
    100 (200 for previous versions).
  o Added 'MaxEnergyCut' (10 GeV is set in default).
  o Added 'fRangeVectorStore' to ensure that RangeVector is created only
    once for each material.
- Added G4ProductionCutTable::ResetConverters() method to clear temporary    (o)
  loss tables and range vectors after first initialisation.
- Removed RToEConverter for neutron, anti-proton, and anti-neutron.

processes/electromagnetic/lowenergy              emlowen-V09-02-54
-----------------------------------
- New implementation for data loading and interpolation methods; LoadData()
  method now loads the data from G4EMLOW dataset and, then, calculates the
  respective logarithmic values during initialization.
  Both data formats (original and logarithmic) are loaded to EM datasets and
  used later by interpolation methods to perform faster calculations.
  LoadNonLogData() method implements the old version for data loading and
  interpolation.
- Introduced fixes to G4ecpssrKCrossSection, G4CrossSectionHandler,
  G4BremsstrahlungCrossSectionHandler, G4DNACrossSectionDataSet and
  G4eIonisationCrossSectionHandler.
- Implemented protection for infinite loops in Rayleigh process.

processes/electromagnetic/standard               emstand-V09-02-24
----------------------------------
- G4GoudsmitSaundersonMscModel: implemented tuning of small angle theta
  distributions, assuming the case of lambdan<1 as single scattering regime;
  also tuned theta sampling for theta below the screening angle.
- G4eMultipleScattering: use G4UrbanMscModel as default (same as in 9.2).
- G4eCoulombScatteringModel: added effective mass factor.
- G4CoulombScattering: added cut per recoil.
- G4BohrFluctuations: changed internal parameter to provide for more smooth
  transition to Landau regime in the case of small cuts.

processes/electromagnetic/utils                  emutils-V09-02-19
-------------------------------
- G4EmElementSelector: fix for missing migration to updated G4PhysicsVector.
- G4VEmModel: insure definition of pointer to G4MaterialCutsCouple object both
  at initialisation and at run time
- G4EmSaturation: use PDG encoding instead of pointer to G4ParticleDefinition.

processes/hadronic
------------------
- binary_cascade (had-binary-V09-02-03)
  o Made capture-threshold a tunable parameter in
    G4GeneratorPrecompoundInterface.
- models/cascade (had-casc-V09-02-08)
  o Added class G4NucleonSampler which replaces old pp, pn, and nn partial and
    total cross sections; also modified other classes which use them.
  o Moved large arrays which are instantiated at every call of frequently
    used methods. They are now initialized once in constructors.
  o G4CascadSpecialFunctions: put copy of total cross section method
    in G4NucleiModel, also removed unneeded energy scale arrays, now replaced
    with a new one.
  o G4CascadeInterface: moved instantiation of various collider classes
    outside of loop, and put on stack instead of heap.
  o G4ElementaryParticleCollider: redesigned to use G4NucleonSampler and
    remove instantiation of large arrays from within loops in code.
  o G4NucleiModel: removed instantiation of large arrays from with loops;
    added new total cross section sampling, removed use of all but one
    energy scale.
  o G4PionSampler: removed large static arrays.
  o G4FinalStateSampler: removed static array pointer to G4 particle types.
  o G4ElementaryParticleCollider: clean up.
  o Added assignment operator to class G4CollisionOutput.
- models/coherent_elastic (hadr-cohe-V09-02-01)
  o Migrated to the hadronic model design of elastic scattering.
  o Added new elastic process G4WHadronElasticProcess.
  o Added new class G4VHadronElastic, base class for elastic models with
    default GHEISHA model
  o Modified G4ElasticHadrNucleusHE to be now capable to work with old and
    new interfaces.
  o New class G4CHIPSElastic, model interface to CHIPS parameterization.
  o Remove had-hoc NaN finder and G4cout in destructor in G4HadronElastic.
- models/management (hadr-modman-V09-02-06)
  o G4HadronicInteraction: added SetModelName() method.
- models/parton_string/management (had-partonstring-mgt-V09-02-00)
  o New Boolean parameter added in G4VSplitableHadron class for activation
    and corresponding methods to operate with it; needed for absorption of
    meson in nuclear collision generated by FTF.

run                                              run-V09-02-05
---
- G4RunManagerKernel now checks G4VUserPhysicsList to confirm no particle
  is registered when G4RunManagerKernel is instantiated.

tracking                                         tracking-V09-02-02
--------
- Correction to G4SteppingManager::InvokeAtRestDoItProcs() so that
  G4Scintillation process (with an AtRestDoIt and 'Forced') will not be
  set to 'NotForced' when NofInactiveProc<MAXofAtRestLoops and when the
  user inactivated it on the fly.

examples                                         examples-V09-02-09
--------
- Updated reference outputs.
- advanced/amsEcal (amsEcal-V09-02-11)
  o BeginOfRun: suppressed function clear().
  o SteppingAction: corrected protection of i1Pixel calculation.
- advanced/hadrontherapy (hadrontherapy-V09-02-28)
  o Added messengers to control the event number and to draw only particular
    tracks. The new command are accesible via the command /event/drawTracks
    and /event/PrintEventNumber.
  o Added a method to retrieve stopping power values for protons, alphas and
    electrons. This method is implemented in the new class
    HadrontherapyInteractionParameters.
  o Added local INCL/ABLA physics list for deuterons, tritons and alphas.
  o Corrected the definition of total inelastic cross section for light ions
    in LocalIonIonInelasticPhysics and fixed problem of non-initilised variable.
  o Added first version of the IAEA benchmark geometry based on E.Haettner's
    thesis. Added ability to remove the phantom by setting its thickness to
    zero. Added ability to select the geometry using G4 macro commands.
  o Collect simulation metadata: number of events, distance of the detector
    (IAEA geometry), depth of the phantom (IAEA geometry), beam energy, energy
    error. Added ability to produce angular distribution plots.
  o Added ability to change the name of the output file between runs; ability
    to use /analysis/setAnalysisFile <filename> to set the name of the output
    file.
  o Fixed compilation errors when AIDA analysis is used and added Root support
    and scripts. Improved plotting scripts and normalization for the fragment
    energy distribution. Collect fragment energy distributions and added
    fragment energy distribution data.
  o Removed the README file in ASCII format and added Doxygen documentation
    tags to the source code and Doxyfile for documentation settings.
  o Eliminated not necessary dependences in the SteppingAction class.
- advanced/medical_linac (medical_linac-V09-02-02)
  o Fixed crash in the MedLinacHead class.
  o Updated physics models: deleted old and no longer supported low-energy
    models and added possibility to activate local physics lists and reference
    physics lists directly via macro command.
  o Added possibility to set cuts and max allowed step lenghts via macro
    commands.
  o Corrected left-over CVS characters in GNUmakefile.
- extended/electromagnetic/TestEm1 (testem1-V09-02-00)
- extended/electromagnetic/TestEm2 (testem2-V09-02-01)
- extended/electromagnetic/TestEm3 (testem3-V09-02-01)
- extended/electromagnetic/TestEm5 (testem5-V09-02-06)
  o PhysicsList: renamed "standard" to "local"; "emstandard" to
    "emstandard_opt0".
  o Updated README and macro files.
- extended/electromagnetic/TestEm11 (testem11-V09-02-00)
- extended/electromagnetic/TestEm12 (testem12-V09-02-00)
  o PhysicsList: renamed "standard" to "local"; "emstandard" to
    "emstandard_opt0"; substituted obsolete low-energy physics builders
    with builders from the reference physics_list library.
  o Updated README and macro files.
- extended/electromagnetic/TestEm13 (testem13-V09-02-00)
- extended/electromagnetic/TestEm14 (testem14-V09-02-00)
  o Removed old Livermore and Penelope physics lists.
- extended/medical/electronScattering (electronScattering-V09-02-02)
  o New example for electron scattering benchmark from T.O'Shea and B.Faddegon.
- examples/extended/persistency/gdml/G01 (G01-V09-02-04)
  o Added assembly.gdml to demonstrate support for 'assembly' tags.
- examples/extended/radioactivedecay/exrdm (exrdm-V09-02-00)                 (o)
  o Fixed trivial compilation warning when compiled without G4ANALYSIS_USE.

tests                                            tests-V09-02-09
-----
- Updated reference outputs and tools.
- test19 (test19-V09-02-07)
  o Added inelastic cross-sections and low-energy test.
  o More detailed check of quantum numbers.
  o Now handling also ion-ion inelastic tests.
  o Fix for Valgrind errors.
- test41 (test41-V09-02-01)
  o Added cut per recoil.
