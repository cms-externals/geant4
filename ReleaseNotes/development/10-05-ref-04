
                       geant4-10-05-ref-04
                       ===================

Major development/fixes included since the last development tag are:

 o Promoting pre-processor flags to fixed #defines in a new header
   generated by CMake, reducing flags added to CMAKE_CXX_FLAGS.
 o Re-enabled use or realloc()/free() and memcpy(), after adapting MT splitted
   data in G4VPhysicalVolume and specific solids to adopt only trivial types.
   Re-establishing original performance in initialisation of the geometry in
   MT mode.
 o Enabled VecGeom wrapper for G4GenericPolycone. Requiring VecGeom-01.01.01.
 o Enhanced UI commands to now return proper return code when they are
   not successful.
 o Fixed export of optical surface properties in GDML writer.
 o Fixed precision loss for scattering with very small kinetic energy in
   EM Coulomb scattering processes.
 o Extended hadron-nucleon cross-sections to c- and b- mesons and hyperons.
 o Removed tracking cut in hadron-elastic and use numerically safer computation
   for very low-energy projectile.
 o Added spontaneous fission channel in radioactive-decay.

---------- Reference-tag 'Release Notes' -----------

(o)  Fixes included in release 10.5.p01

Summarised, the list of changes is the following:

cmake                                            cmake-V10-05-02
-----
- Promoting following pre-processor flags to fixed #defines in a new header
  generated by CMake using the chosen build options to #define/#undef as
  appropriate: G4USE_STD11, G4MULTITHREADED, G4_STORE_TRAJECTORY, G4VERBOSE,
  GEANT4_USE_TIMEMORY.
  Ensuring the header is included by primary "global" category headers so
  that all categories will pick up the changes transparently.
  Removed use of add_definitions of CMAKE_CXX_FLAGS to set these flags in
  Geant4 and client scripts.

config                                           config-V10-05-00
------
- architecture.gmk: added -DG4GMAKE to CPPFLAGS to identify enabling of
  GNUmake builds.

geometry/magneticfield                           field-V10-05-01             (o)
----------------------
- Corrected transformation to local system in G4QuadrupoleMagField.

geometry/management                              geommng-V10-05-02
-------------------
- G4GeomSplitter: re-enabled use or realloc()/free() and memcpy(), after
  adapting G4VPhysicalVolume MT splitted data to adopt only trivial types
  for allocation.

geometry/navigation                              geomnav-V10-05-01           (o)
-------------------
- Protected report for looping particles under verbosity flag in
  G4PropagatorInField::ComputeStep().

geometry/solids/specific                         geom-specific-V10-05-06
----------------
- Enabled VecGeom wrapper for G4GenericPolycone. Requiring VecGeom-01.01.01.
- Modified G4PolyconeSide and G4PolyhedraSide to use only trivial types for
  MT splitted data in G4PlSideData and G4PhSideData respectively.
- Protected check in G4TwistedTubsSide::DistanceToPlane() within debug flag.

global                                           global-V10-05-06
------
- Added G4GlobalConfig.hh generated header to hold global, always required,
  pre-processor symbols instead of relying on -D flags for: G4USE_STD11,
  G4MULTITHREADED, G4_STORE_TRAJECTORY, G4VERBOSE and GEANT4_USE_TIMEMORY.
  Added inclusion of G4GlobalConfig.hh in G4Types.hh, tls.hh and G4TiMemory.hh
  so that global and other categories pick up the definitions transparently.
- Updated other headers/srcs to include G4Types/G4Threading if they use
  G4MULTITHREADED.
- Updated date and tag-ID for geant4-10-05-ref-04.

intercoms                                        intercoms-V10-05-05
---------
- The following UI commands now return proper return code when they are
  not successful. Addressing problem report #2159:
  /control/execute, loop, foreach, shell, getEnv.
- G4UIcommand: fixed misbehavior in RangeCheck() method, when string-type    (o)
  parameter comes prior to numeric-type parameters in commands.
- Fix comments in this History file and G4UIparameter.hh.                    (o)

particles                                   particles-V10-05-04
---------
- Fixed typo in G4ElectronOccupancy::operator==().                           (o)

persistency/gdml                                 gdml-V10-05-03              (o)
----------------
- Added protection to G4GDMLParser for dumping geometry only through
  the master thread. Added extra protection also in reading.
  Addressing problem report #2156.
- Fixed export of optical surface properties.
  Addressing problem reports #2142 and 2143.

physics_lists/constructors/electromagnetic       phys-ctor-em-V10-05-08
------------------------------------------
- Added sub-excitation processes in G4EmDNAPhysics_option8.

physics_lists/constructors/gamma_lepto_nuclear   phys-ctor-glnuclearV10-05-00
----------------------------------------------
- G4EmExtraPhysics: removed extra static members.

processes/cuts                                   procuts-V10-05-01
--------------
- Added protection against premature call to G4ProductionCutsTable.

processes/electromagnetic/highenergy             emhighenergy-V10-05-02
------------------------------------
- G4GammaConversionToMuons, G4AnnihiToMuPair:
  added registration/de-registration mechanism.

processes/electromagnetic/standard               emstand-V10-05-10
----------------------------------
- G4IonCoulombScatteringModel, G4eCoulombScatteringModel,                    (o)
  G4eSingleCoulombScatteringModel, G4hCoulombScatteringModel: fixed precision
  loss for scattering with very small kinetic energy.
  Addressing problem report #2152.
- G4BetheHeitler5DModel: replaced local boost and rotation functions with
  CLHEP boost, boostZ, transform. One random generator flatArray() call in
  sampling loop.
- G4eCoulombScatteringModel, G4WentzelOKandVIxSection: cleanup debug cout
  and initialisation.

processes/electromagnetic/utils                  emutils-V10-05-09
-------------------------------
- G4LossTableManager: added Register/DeRegister() methods and vector
  of pointers for G4VProcess classes for X-ray and optical processes.
- G4EmParameters: added polarisation flag; moved implementation of splitting
  parameters to source and added check on lock; added 9.99 MeV low limit
  in the SetMaxEnergy() method, added thread lock to Dump() method.

processes/electromagnetic/xrays                  xrays-V10-05-01
-------------------------------
- G4Cerenkov, G4Scintillation, G4SynchrotronRadiation, G4VTransitionRadiation:
  added registration/de-registration mechanism.

processes/hadronic
------------------
- cross_sections (hadr-cross-V10-05-08)
  o G4HadronNucleonXsc: added extra method for hyperon x-sections.
    Extended to c- and b- mesons and hyperons.
- models/coherent_elastic (hadr-cohe-V10-05-00)
  o G4HadronElastic: removed tracking cut and use numerically safer computation
    for very low-energy projectile.
    Improved description and comments; added C++11 keywords.
- models/fission (hadr-fission-V10-05-00)                                    (o)
  o G4SmpIsoDir: removed use of G4Pow for squaring, sometimes causing crash.
- models/particle_hp (hadr-hpp-V10-05-01)                                    (o)
  o Fix to make sure production cross-section is not ignored when sampling
    discrete gamma emission. Addressing problem report #1824.
- models/parton_string/qgsm (hadr-qgsm-V10-05-00)                            (o)
  o G4QGSParticipants: bug-fix in computation of the transverse mass in
    DeterminePartonMomenta() method.
- models/radioactive_decay (radioactive_decay-V10-05-01)
  o Added spontaneous fission channel: added new class G4SFDecay to handle
    neutron and gamma generation using LLNL model. Read spontaneous fission
    data from database, insert it into decay tables and instantiate G4SFDecay.
- processes (hadr-proc-V10-05-00)
  o G4HadronElasticProcess: removed tracking cut for all particles (charged
    particles may be stopped by the tracking cut of ionisation process;
    neutrons should be stopped by G4NeutronKiller).
    Clean up sampling of final state; improved description and comments;
    added C++11 keywords; removed unused local members.

visualization                                    vis-V10-05-17
-------------
- management (visman-V10-05-04):
- modeling (modeling-V10-05-01):
  o Corrections to "/vis/viewer/set/sectionPlane" command.
    Still some strange behaviour in small fraction of cases.
- externals (visexternals-V10-05-00)
  o Include path for generated G4GlobalConfig.hh header.
- OpenGL (opengl-V10-05-04):
  o Fixed Coverity defect and bug in section plane.

examples                                         examples-V10-05-04
--------
- Updated documentation and reference outputs.
- advanced/nanobeam (nanobeam-V10-05-00)
  o Include G4Types.hh header in main(), before use of G4MULTITHREADED.
- extended/electromagnetic/TestEm16 (testem16-V10-05-01)
  o PhysicsList: use G4DecayPhysics and drop G4AutoDelete
  o Migrated to use default MixMax generator.
- extended/medical/DICOM2 (DICOM2-V10-05-00)
  o Include G4Types.hh header in main(), before use of G4MULTITHREADED.
- extended/medical/fanoCavity2 (fano2-V10-05-02)
  o DetectorConstruction: restore wallThickness to 5cm and radius to 10m.
- extended/persistency/gdml/G01 (G01-V10-05-02)                              (o)
  o Migrated example to multi-threading, to test MT in reading/writing.
  o Include G4Types.hh header in main(), before use of G4MULTITHREADED.
- extended/persistency/P01 (P01-V10-05-00)
  o Fixed definition of allocator in ExP01TrackerHit.

tests                                            tests-V10-05-04
-----
- Updated reference outputs and tools.
- tests/test37 (test37-V10-05-00)
- tests/test41 (test41-V10-05-00)
- tests/test44 (test44-V10-05-00)
  o Added job submission scripts.
