
                       geant4-10-03-ref-04
                       ===================

Major development/fixes included since the last development tag are:

 o Renamed G4THitsMap to G4VTHitsMap and new collection types for hits.
 o Added G4MultiUnion class, importing original implementation for a
   multiple-union structure from the USolids library.
 o Reviewed implementation of G4Box and G4Trap, made more compact and
   performant.
 o New structure for G4coutDestination functionality with division
   between sink and filter.
 o New design with base class for all builders, to properly clean memory
   in MT mode.
 o G4GoudsmitSaundersonTable: new representation of the GS angular
   distributions (data size reduced from 16MB down to 5 MB).
 o New 'solidstate' module for processes, including channeling and phonon
   modeling.
 o New classeds for elastic neutrino-electron scattering, for use in
   dark matter and neutrino experiments.
 o Fixed significant memory usage in Bertini coalescence, observed with
   high-energy applications.
 o Updated to data sets G4PhotonEvaporation-5.0 and G4EMLOW-6.53.

---------- Reference-tag 'Release Notes' -----------

(*)  Fixes included in release 10.3.p02

Summarised, the list of changes is the following:

cmake                                            cmake-V10-03-16
-----
- Updated to data sets G4PhotonEvaporation-5.0 and G4EMLOW-6.53.

config                                           config-V10-03-01
------
- binmake-gmk: added 'processses/solidstate' module include path.

analysis                                         analysis-V10-03-03          (*)
--------
- Corrected handling of open file failure.
  Addressing problem report #1957.

digits_hits                                      digits_hits-V10-03-01
-----------
- Renamed G4THitsMap to G4VTHitsMap: although G4VTHitsMap is not a pure
  virtual class, it has an additional template parameter for the map type,
  so it is not intended to be used directly; made G4VTHitsMap more generic
  in accepting the type of data stored (with more generic template overloads
  not specific to G4double and G4StatDouble).
  Fixed initialisation of G4StatDouble entries.
- Added G4THitsMultiMap, which functions like G4THitsMap but all entries
  are stored.
- Added G4THitsUnorderedMap, which functions like G4THitsMap but uses an
  unordered_map.
- Added G4THitsUnorderedMultiMap, which functions like G4THitsMap but
  stores all entries in an unordered multimap.
- Typedefs for map_type, value_type, iterator, and const_iterator
  for future generic usage.
- Defined begin(), end(), cbegin(), cend() so now G4VTHitsMap can be used
  in range-based loops.

event                                            event-V10-03-01
-----
- G4SPSPosDistribution: added GetRotx,y,z() access functions and other
  accessors for use by G4GPSModel for visualisation.

geometry
--------
- solids/Boolean (geom-bool-V10-03-02):
  o Added G4MultiUnion class, importing original implementation for a
    multiple-union structure from the USolids library.
    Removed no longer necessary wrapper G4UMultiUnion.
- solids/CSG (geom-csg-V10-03-15):
  o Reviewed implementation of G4Box and G4Trap, made more compact and
    performant.
  o G4Trap: Fix in GetPointOnSurface(), the method could generate points
    laying outside the surface. Added private method GetVertices(),
    calculating vertices of the trap from its side planes; removed private
    methods GetFaceArea() and GetPointOnPlane(). Improved GetCubicVolume()
    and GetSurfaceArea(); calculation of the volume and surface area is now
    done by using vertices calculated by GetVertices(). Improved/simplified
    other methods: StreamInfo(), MakePlanes(), MakePlanes(pt), Extent() and
    CalculateExtent().
  o Added accessor to G4Orb for retrieving cached max radius tolerance.      (*)
- solids/specific (geom-specific-V10-03-04)
  o Renamed G4SurfaceVoxelizer to G4Voxelizer and extended to support
    voxelisation of shapes in 3D space. Adapted G4TessellatedSolid
    accordingly.

global                                           global-V10-03-07
------
- New structure for G4coutDestination functionality with division
  between sink and filter. 
- Removed obsolete internal definition of abs() in templates.hh.
- Added function G4RandomDirection(G4double cosTheta) to G4RandomDirection.hh.
  Addressing enhancement request #1961.

graphics_reps                                    greps-V10-03-03
-------------
- Added implementation of G4Colour::operator+=(), as required by RayTracer
  in its use of G4THitsMap. Adding colours, without also taking brightness
  into account, does not make sense, so made it synonymous with operator=(),
  which is equivalent to covering the old colour with the new, like a coat
  of paint.

particles                                        particles-V10-03-08
---------
- Fixed inconsistency between enum definition of G4FloatLevelBase 
  and initialization of G4Ions::G4FloatLevelBase data.
  Addressing problem report #1968.

persistency/gdml                                 gdml-V10-03-01
----------------
- Enabled import/export of G4MultiUnion as a native type, no longer bound
  to USolids module only.

physics_lists
-------------
- builders                                       phys-builders-V10-03-05
  o New design with base class for all builders, to properly clean memory in
    MT mode; added c++11 compatibility;
    G4BuilderInterface renamed to G4PhysicsBuilderInterface and moved to run
    category. Removed unused class G4TheoModelFactory.
  o OrderingParameterTable: disabled PostStep multiple-scattering.
- constructors/electromagnetic                   phys-ctor-em-V10-03-07
  o Added Geant4-DNA stationary constructors.
  o G4EmStandardPhysicsSS: apply single scattering to all particles.         (*)
    Addressing problem report #1966.
- constructors/factory                           phys-ctor-fact-V10-03-00
  o Added Geant4-DNA stationary constructors.
- lists                                          phys-lists-V10-03-02
  o G4PhysListFactory: fixed EM option "__SS".                               (*)
    Addressing problem report #1966.

processes                                        processes-V10-03-03
---------
- Added new 'solidstate' module, including channeling and phonon modeling.

processes/electromagnetic/dna                    emdna-V10-03-15
-----------------------------
- Added new G4DNADummyModel and allow the combination of G4VEmModel and
  G4VDNAModel in G4DNAModelInterface.      
- Updated G4DNAModelInterface to correctly use G4DNAMolecularMaterial.

processes/electromagnetic/standard               emstand-V10-03-08
----------------------------------
- G4NuclearStopping, G4ICRU49NuclearStoppingModel: fixed nuclear stopping    (*)
  power computation.
- G4GoudsmitSaundersonTable: new representation of the GS angular
  distributions (data size reduced from 16MB down to 5 MB).
  Requires new data-set G4EMLOW-6.53.
- G4UniversalFluctuation: correction to get results closer to data.

processes/electromagnetic/utils                  emutils-V10-03-06
-------------------------------
- G4VEmProcess: added DNA ionisation process to the list of discrete processes,
  which have auger and fluo flags for secondary particles.
- G4VEmModel: added extra protected class member for nuclear stopping.       (*)
- G4EmCorrections: removed computation of nuclear stopping power.
- G4EmCalculator: use interface of the process for the computation of the    (*)
  nuclear stopping power for discrete processes.
- G4EmParameters: G4EmSaturation may be created at any moment (added mutex).

processes/hadronic
------------------
- models/cross_sections (hadr-cross-V10-03-03)
  o G4NeutrinoElectronNcXsc: new class for the cross-section of elastic
    neutrino-electron scattering, for use in dark matter and neutrino
    experiments. Note that the cross section is small: ~10^-44 - 10^-42 cm^2
    in the neutrino energy range 1-100 GeV.
  o G4NeutrinoElectronCcXsc: new class for the cross-section of
    neutrino-electron inelastic interaction (charge current).
- models/cascade (hadr-casc-V10-03-01)
  o G4CascadeCoalescence: removed clusterHash() function and 'triedClusters' (*)
    registry. Droped redundant calls of tryCluster() with subcombinatorics;
    all combinations are handled, uniquely, in main loop over indices.
    This eliminates significant memory usage observed with high-energy
    applications of BERT.
  o G4CascadeParameters: use G4HadronicDeveloperParameters as a tool for
    sharing parameters between developers and experienced users.
    Need to set enviroment variable of "TEST_HDP" for testing the tool. 
- models/coherent_elastic (hadr-cohe-V10-03-01)
  o G4NeutrinoElectronNcModel: new class for the final-state model of
    elastic neutrino-electron scattering, for use in dark matter and neutrino
    experiments.
- models/de_excitation (hadr-deex-V10-03-30)
  o G4LevelReader, G4NuclearLevelData: removed code for reading of old 
    data structure
  o G4LevelReader, G4LevelManager, G4NucLevel, G4PhotonEvaporation: use
    G4double for energy and life time.
    Addressing problem report #1964. 
  o G4LevelReader: by default issue G4Exception only for Z<6,
    Fixed fill of 'mpRatio' parameter of a transition (was always zero before).
    Read updated data structure where "correlated_gamma" directory is located.
  o G4LevelManager: removed obsolete method.
  o G4FermiFragmentsPoolVI: fixed selection of decay chains for
    unphysical fragments, which happens when used by INCL++.
  o G4PhotonEvaporation: always have gamma transition to the discrete level  (*)
    (if there is no levels, go to the ground state).
    Addressing second part of problem report #1950.
  o G4DeexPrecoParameters: set default MaxLifeTime to 1000s (was 0.1s).      (*)
  o G4DeexPrecoParameters: disable possibility to read old data; throw fatal
    exception soon if the first file in the dataset cannot be read.
- models/lepto_nuclear (hadr-lepnuc-V10-03-01)
  o G4NeutrinoElectronCcModel: new class for the final-state model of
    neutrino-electron inelastic interaction (charge current).
- models/particle_hp (hadr-hpp-V10-03-03)                                    (*)
  o Added check for He3 projectile. Addressing problem report #1907.
  o Fix in destructor of processes to protect against concurrent deletion.
  o Bug fix and improved stability in G4ParticleHPFinalState.
  o Suppressed unnecessary warning messages in G4ParticleHPEnAngCorrelation.

processes/management                             procman-V10-03-01
--------------------
- Use G4Log in G4VProcess.

processes/scoring                                procscore-V10-03-00         (*)
-----------------
- G4ParallelWorldProcess: G4Step of a parallel world now has a valid
  pointer to secondaries.

run                                              run-V10-03-10
---
- Modified design of physics-lists for allowing cleanup of memory in MT mode.
  Introduced new class G4PhysicsBuilderInterface which all physics-lists
  builders inherit from.
  Worker threads now call G4VUserPhysicsList::TerminateWorker() to clean up
  physics-list thread-specific objects. G4VPhysicsConstructor holds list of
  TLS builders.
- Transform G4VPhysicsConstructor split-class to adopt pointers.
- G4MTRunManager, G4WorkerRunManager: protect against null pointer for
  SetUserAction() method.

visualization                                    vis-V10-03-04
-------------
- management (visman-V10-03-07):
  o Added UI command '/vis/scene/add/gps'.
  o Improved commands guidance.
- modeling (modeling-V10-03-05):
  o Added class G4GPSModel for visualisation of General Particle Source.
    Can be used with new UI command '/vis/scene/add/gps'.
  o Improved checking of G4PhysicalVolumeModel.
  o Added G4ModelingParameters::PVPointerCopyNo.
- OpenGL:
  o G4OpenGLViewer: minor improvement to picking (suppressing "no hits"
    message). Code cleanup.
  o G4OpenGLXViewer: Reverted to XA_RGB_BEST_MAP.
- RayTracer (raytracer-V10-03-02):
  o Changed back to XA_RGB_BEST_MAP (seems OK now).
  o Simplified passing of ray-tracer pointer.
  o Fixed a bug whereby the jpeg for RayTracer was always 600x600.

data sets:
---------
- G4PhotonEvaporation-5.0:
  o Removed old data; correlated_gamma files moved to main module.
- G4EMLOW-6.53:
  o Improved and reorganized GS data.

examples                                         examples-V10-03-04
--------
- Updated documentation and reference outputs.
- advanced/nanobeam (nanobeam-V10-03-03)
  o Updated EM field settings for multi-threading; changed default.mac macro.
- basic/B5 (exampleB5-V10-03-01)
  o Use std::array for related data members in B5EventAction to reduce code.
  o Added data members for histogram Ids and the code to retrieve them by
    histogram names via G4AnalysisManager.
  o Corrected the list of 2D histograms in README .
- extended/electromagnetic/TestEm1 (testem1-V10-03-00)
- extended/electromagnetic/TestEm4 (testem4-V10-03-00)
- extended/electromagnetic/TestEm5 (testem5-V10-03-04)
- extended/electromagnetic/TestEm11 (testem11-V10-03-00)
- extended/electromagnetic/TestEm12 (testem12-V10-03-01)
- extended/electromagnetic/TestEm13 (testem13-V10-03-00)
- extended/electromagnetic/TestEm14 (testem14-V10-03-00)
- extended/electromagnetic/TestEm18 (testem18-V10-03-00)
- extended/hadronic/Hadr03 (exhadr03-V10-03-03)
- extended/hadronic/Hadr04 (exhadr04-V10-03-01)
- extended/hadronic/Hadr06 (exhadr06-V10-03-03)
- extended/hadronic/Hadr07 (exhadr07-V10-03-01)
- extended/hadronic/NeutronSource (NeutronSource-V10-03-03)
  o BeginOfRunAction(): disabled storage of random seed.
- extended/medical/dna (exdna-V10-03-00)
  o Updated READMEs.
- extended/medical/dna/dnaphysics (dnaphysics-V10-03-02)
  o Added new plot in plot.C.
- extended/medical/dna/neuron (neuron-V10-03-01)
  o Fix for Windows.
- extended/medical/dna/spower (spower-V10-03-00)
  o Moved stationary constructors to physics_lists module.
- extended/medical/dna/svalue (svalue-V10-03-01)
  o Updated plot.C.
- extended/medical/dna/wvalue (wvalue-V10-03-01)
  o Updated plot.C and wvalue.in macro.
- extended/medical/fanoCavity2 (fano2-V10-03-00)
  o Switch to NIST material description (keeping material densities
    defined in previous version).
  o Default thread number is not set to the maximum available cores.
- extended/medical/GammaTherapy (gtherapy-V10-03-06)
  o Ported to work in multi-threading.
  o Fixed bugs in PrimaryGeneratorAction and RunAction.
- extended/parallel/ThreadsafeScorers (ThreadsafeScorers-V10-03-01)
  o Fixes to deletion/clearing of static maps between runs.
  o Removed some unnecessary typedefs.
  o Set the number of threads to the number of cores.
- extended/radioactivedecay/rdecay01 (rdecay01-V10-03-07)
  o BeginOfRunAction(): disabled storage of random seed.
- extended/visualization/userVisAction (exVisualization-V10-03-02)
  o Copied exampleB1.in to userVisAction.in.
    Copied run1.mac and run2.mac from example B1.
    All macros now include /run/initialize.
  o Removed init.mac, no longer used.
    /run/initialize is in the new run1.mac and run2.mac.

tests                                            tests-V10-03-04
-----
- Updated reference outputs and tools.
- tests/test04 (test04-V10-03-02)
  o Increased time limit to 45 minutes.
  o Reconfigured for reducing memory consumption.
- tests/test18 (test18-V10-03-00)
  o Tst18PhysicsList: make physics-list builders created in constructor.
- tests/test23 (test23-V10-03-01)
  o Move internal builder to new design.
  o Change order of includes to avoid (Root-related) compilation warnings.
- tests/test31 (test31-V10-03-00)
  o test31Histo: added extra test of nuclear stopping power.
- tests/test46 (test46-V10-03-00)
  o EcalSD, HcalSD: fixed usage of G4EmSaturation.
- tests/test53 (test53-V10-03-00)
  o Migrated to multi-threading.
  o Switch to ActionInitialization, Run and RunAction classes.
  o Switch to G4AnalysisManager.
- tests/test68 (test68-V10-03-00)
  o Improved python scripts (reproducibility_*.py): distinction between an
    error due to a real reproducibility problem and an error due to a
    missing/wrong expected log-file (which can be caused, for instance, by
    a crash when running).
- tests/test202 (test202-V10-03-00)
  o Migrated to multi-threading. Introduced Tst202ActionInitialization.
  o main(): removed #ifdef G4UI_USE and G4VIS_USE.
    Moved G4UIExecutive to start of main().
  o Updated build scripts.
