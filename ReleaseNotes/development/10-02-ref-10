
                       geant4-10-02-ref-10
                       ===================

Major development/fixes included since the last development tag are:

 o Implemented merging of ntuples in MT mode in analysis.
 o More shapes now implementing new CalculateExtent() in geometry.
 o New classes for definition of crystals geometry and material composition.
 o New G4MuonicAtomDecay process for decay of muonic atoms and related
   physics-list constructor G4MuonicAtomDecayPhysics to enable it.
 o Introducing parallel geometry capability in generic biasing and related
   methods in physics constructor to activate it in physics-lists.
 o New adjoint processes G4AdjointForcedInteractionForGamma,
   G4UrbanAdjointMscModel and G4eAdjointMultipleScattering for reverse-MC.
 o G4UniversalFluctuation: restored to 10.3-beta version.
 o Added 8- and 9-body final states to K-, K0 and K0b induced reactions
   in Bertini cascade hadronic model.
 o Added optional handling of full description of floating levels in
   de-excitation model.
 o Major improvement to QGSM: using Kaidalov/Poghosyan parameters for
   Pomeron and non-vacuum reggeons.
 o Added implementation of eta and omega meson in INCL model.
 o Added completion widget in G4UIQt.
 o Fixed compilation errors and warnings on clang-3.9 and XCode-8 on MacOS.
 o Updated data sets G4EMLOW-6.50 and G4ENSDFSTATE-2.0.

---------- Reference-tag 'Release Notes' -----------

(*)  Fixes included in release 10.2.p03

Summarised, the list of changes is the following:

cmake                                            cmake-V10-02-29
-----
- Provided placeholder variable for adding setting of XercesC library path.  (*)
  Addressing problem report #1877.
- Added options -fno-math-errno, -ftree-vectorize, -fno-trapping-math to
  default flags in Release mode for gcc and clang compilers to assist in
  auto-vectorization; move optimization level to -O3 on all supported
  compilers.
- No longer use --whole-archive for physics-lists module on static builds.
- Updated to data sets G4EMLOW-6.50 and G4ENSDFSTATE-2.0.

config                                           config-V10-02-05
------
- Changed default optimisation settings to -O3 for gcc, clang and icc.
- Added -fno-trapping-math -ftree-vectorize -fno-math-errno to gcc and
  clang settings.
- Better factorise -std options in scripts.

analysis                                         analysis-V10-02-23
--------
- Updated to g4tools 2.1.0.
- Added parallel ntuple: on a same booked nutple, pass baskets from threads
  or mpi ranks to a "main ntuple" tied to a file.
- Implemented merging of ntuples in MT mode.
  Merging ntuples in a selected number of output files.

error_propagation                                error-propagation-V10-02-01 (*)
-----------------
- G4ErrorPhysicsList: replaced direct use of 'aParticleIterator' with
  GetParticleIterator().

geometry
--------
- management (geommng-V10-02-26):
  o New utility class G4GeomTools providing static utility methods for
    geometry related calculations.
  o New class G4LogicalCrystalVolume, representing an extended logical
    volume for crystal description.
  o G4BoundingEnvelope: take into account four points instead of three in
    CreateListOfPlanes().
  o G4LogicalVolume: added virtual keyword to destructor for extended
    types in the kernel. Added IsExtended() method.
  o Moved initialisation of G4GeomSplitter thread-local data to be inline    (*)
    along with generic template type. Fixing compilation/linking errors on
    clang-3.9 and XCode-8 on MacOS.
- navigation:                                                                (*)
  o G4ReplicaNavigation: use Cartesian tolerance in distance evaluation
    in DistanceToOutPhi(). Addressing problem report #1902.
  o G4Navigator: in ComputeStep() force abortion of event if track gets
    really stuck, but avoid check for overlaps if push-verbosity is set to
    false. Extended printout for stuck tracks, to show also local coordinates.
  o G4PhantomParameterisation: revisited precision checks.
  o Added annotations for while-do loops.
- solids/CSG (geom-csg-V10-02-15):
  o G4Cons, G4UCons: re-implemented CalculateExtent() to make use of
    G4BoundingEnvelope; removed no-longer used method CreateRotatedVertices().
  o G4Tubs, G4UTubs: revised implementation of CalculateExtent() to avoid use
    of addresses to vectors elements. Attempting fix for reported Coverity
    defect.
- solids/specific (geom-specific-V10-02-17)
  o Moved initialisation of G4GeomSplitter thread-local data to be inline    (*)
    along with generic template type. Fixing compilation/linking errors on
    clang-3.9 and XCode-8 on MacOS.
  o Reimplemented CalculateExtent() in G4Polycone, G4Polyhedra, G4Tet,
    G4GenericPolycone, G4GenericTrap, G4EllipticalTube, G4VTwistedFaceted and
    associated USolids wrappers, to make use of G4BoundingEnvelope.
    Removed no-longer used method CreateRotatedVertices().
- volumes (geomvol-V10-02-03)                                                (*)
  o Moved initialisation of G4GeomSplitter thread-local data to be inline
    along with generic template type. Fixing compilation/linking errors on
    clang-3.9 and XCode-8 on MacOS.

global                                           global-V10-02-32
------
- Made initialisation of G4TWorkspacePool thread-local data to be inline     (*)
  along with generic template type. Fixing compilation/linking errors on
  clang-3.9 and XCode-8 on MacOS.
- G4Threading: added GetNumberOfRunningWorkerThreads() function.

intercoms                                        intercoms-V10-02-05
---------
- G4UIcommandTree: sdded GetFirstMatchedString() public method.

interfaces                                       interfaces-V10-02-07
----------
- G4UIQt:
  o Added completion widget.
  o Added a default icon toolbar,
  o Moved eventFilter init at sessionStart() to avoid bad init state in
    the help tree and events to be sent twice or more.
  o Prevent potential crash on Windows by protecting master G4coutDestination
    assignment with G4MULTITHREADED guard.
- Added a new command /gui/defaultIcons to enable/disable default icon toolbar.

materials                                        materials-V10-02-18
---------
- Introduced G4ExtendedMaterial and G4VMaterialExtension for specific
  extensions to G4Material; added G4CrystalMaterial, derived class of
  G4ExtendedMaterial for the description of crystals.
- Introduced G4CrystalUnitCell with the crystalline unit cell parameters,
  G4AtomicFormFactor for the calculation of the form factor and G4AtomicBond
  for G4CrystalUnitCell.
- Fixed incorrectly calculated index for MicroRoughness lookup table         (*)
  in G4UCNMaterialPropertiesTable. Fixed incorrectly calculated MicroRoughness
  amplitude in G4UCNMicroRoughnessHelper.

particles                                        particles-V10-02-30
---------
- Added decay channel placeholders for G4MuonicAtom DIO and nuclear
  capture physics.
- Fixed bug in the case of two or more levels have a same excitation energy.
- Moved initialisation of G4PDefSplitter thread-local data to be inline      (*)
  along with generic template type. Fixing compilation/linking errors on
  clang-3.9 and XCode-8 on MacOS.
- Requiring new data-set G4ENSDFSTATE-2.0.

physics_lists
-------------
- constructors/decay (phys-ctor-decay-V10-02-05)
  o Added G4MuonicAtomDecayPhysics constructor to enable decay of muonic atoms.
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().
- constructors/electromagnetic (phys-ctor-em-V10-02-35)
  o G4EmStandardPhysics_option4: disabled lateral displacement beyond safety.
  o G4EmDNAPhysics: added G4EmParameters::Instance()->SetDefaults();
    Reconfigured activation of atomic deexcitation.
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- constructors/factory (phys-ctor-fact-V10-02-04)
  o Use G4_REFERENCE_PHYSCONSTR_FACTORY so that registry works in the case
    of static library builds, even without forcing linker to load whole
    library (which is not possible for MS Visual Studio).
    Implemented G4_REFERENCE_PHYSCONSTR_FACTORY_NS in case physics
    constructor lives in a namespace.
- constructors/gamma_lepto_nuclear (phys-ctor-glnuclear-V10-02-02)
- constructors/hadron_elastic (phys-ctor-helastic-V10-02-03)
- constructors/hadron_inelastic (phys-ctor-hinelastic-V10-02-05)
- constructors/ions (phys-ctor-ions-V10-02-01)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- constructors/limiters (phys-ctor-limiters-V10-02-04)
  o G4GenericBiasingPhysics: added methods to configure physics lists
    to activate parallel geometry functionality introduced in generic
    biasing.
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- constructors/stopping (phys-ctor-stopping-V10-02-01)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- lists (phys-lists-V10-02-10)
  o Added G4_REFERENCE_PHYSLIST_FACTORY[_NS] for pulling in lists
    from static libraries. Fixed issue where G4PhysListRegistry didn't
    properly exit if a requested extension didn't exist in its list.
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)

processes/biasing/generic                        proc-biasgen-V10-02-04
-------------------------
- Introducing parallel geometry capability in generic biasing:
  G4BiasingProcessInterface: checks for biasing operator in mass and parallel
  geometries; G4ParallelGeometriesLimiterProcess is a new process that limits
  the step on the boundaries of the parallel geometry (one instance handles
  all parallel geometries); G4BiasingProcessSharedData is a class for data
  shared among biasing processes related to a same G4ParticleDefintion,
  extended to carry information related to parallel geometries; G4BiasingHelper
  is extended to handle addition of G4ParallelGeometriesLimiterProcess
  to the process manager.

processes/decay                                  decay-V10-02-03
---------------
- Added G4MuonicAtomDecay class for decay of muonic atoms.

processes/electromagnetic/adjoint                emadjoint-V10-02-03
---------------------------------
- Added new adjoint process G4AdjointForcedInteractionForGamma to force the 
  reverse interaction of adjoint gamma.
- Modification in G4AdjointBremsstrahlungModel to use the direcet angular
  model to compute the direction of the adjoint secondary.
- Added G4UrbanAdjointMscModel and G4eAdjointMultipleScattering classes.
- Slight modifications of G4VEmAdjointModel for new forced interaction.

processes/electromagnetic/lowenergy              emlowen-V10-02-10
-----------------------------------
- G4MicroElecInelasticModel: changes to allow faster computation.
- Requires new data set G4EMLOW-6.50.

processes/electromagnetic/standard               emstand-V10-02-30
----------------------------------
- G4UniversalFluctuation: restored to 10.3-beta version.
- G4BetheHeitlerModel, G4ICRU49NuclearStoppingModel, G4IonFluctuations,
  G4GoudsmitSaundersonMscModel, G4IonFluctuations: use better name for
  G4Pow pointer.

processes/electromagnetic/utils                  emutils-V10-02-36
-------------------------------
- G4EmSaturation: cleanup; make it thread safe; default printout level set to 1.
- G4EmCorrections, G4ionEffectiveCharge: use better name for G4Pow pointer.

processes/hadronic
------------------
- models/cascade (hadr-casc-V10-02-04)
  o Added 8- and 9-body final states to K-, K0 and K0b induced reactions.
  o G4EquilibriumEvaporator: in deExcite(), replaced sampling of evaporation
    spectrum with original Dostrovsky method.
- models/de_excitation (hadr-deex-V10-02-53)
  o G4DeexPrecoParameters, G4NuclearLevelData, G4LevelManager, G4LevelReader
    and G4NucLevel: added optional reading of the G4LEVELGAMMADATA-4.0 extended
    data which includes full information on level and transition angular
    momentum and parity; full description of floating levels; by default old
    files are downloaded; to enable new reading method a flag should be changed
    inside G4DeexPrecoParameters.
  o G4EvaporationChannel, G4UnstableFragmentBreakUp: sample a decay differently
    if the residual nucleus is n, p, d, t, He3, He4; this happens if excitation
    of an initial fragment is high.
  o G4UnstableFragmentBreakUp: new class helping to decay exotic states which
    have zero probability to be de-excited via any of normal decays; now
    residual nucleus is checked and if it has gamma level data, the decay
    chain is continued by normal decays.
  o G4EvaporationChannel, G4EvaporationProbability and
    G4AlphaEvaporationProbability: fixed usage of the Coulomb barrier.
  o G4ChatterjeeCrossSection, G4KalbachCrossSection: use Coulomb barrier from
    standard parameterisation instead of hard-coded one in computation of
    probability of a fragment emission; improved neutron cross-section
    parameterisation below 0.5 MeV.
  o G4Evaporation, G4EvaporationChannel, G4EvaporationProbability: tuned 
    protons/light ions probabilities, more accurate intergration.
  o G4FermiFragment, G4CoulombBarrier, G4VCoulombBarrier: tuned for evaporation.
- models/inclxx (hadr-inclxx-V10-02-03)
  o Updated to INCL++ v5.3_rc13: added implementation of eta and omega meson
    production. A few minor fixes.
- models/lepto_nuclear (hadr-lepnuc-V10-02-02)
  o G4MuonVDNuclearModel: increased number of points in energy from 8 to 73; 
    G4ElementData is added instead of 3D array; data class is now static,
    shared between threads and mu+, mu-. Added ModelDescription() method,
    code cleanup including removal not used headers.
- models/particle_hp (hadr-hpp-V10-02-27)
  o Introducing G4PARTICLEHPDATA as default base name for data modules.
  o Fixed Coverity defects.
- models/parton_string/management (hadr-partonstring-mgt-V10-02-02)
  o G4VPartonStringModel: implemented repetition of an event simulation
    if strings are not generated, or if hadronization cannot manage
    with string's fragmentation. Exception is thrown after 100 attempts.
    G4Exception warning message is thrown when parton model cannot produce
    or fragment strings; in such case, projectile hadron and target nucleus
    are returned unchanged to a caller.
- models/parton_string/qgsm (hadr-qgsm-V10-02-07)
  o Major improvement to QGSM: Pomeron parameters are set up according to
    A.Kaidalov and M.Poghosyan (2009-2010). Non-vacuum reggeons: f and omega,
    are included in the calculations using parameters by A.Kaidalov and
    M.Poghosyan (2009-2010).
  o New class G4Reggeons for calculations of X-sections.
  o Cut non-vacuum reggeons are interpreted as a creation of a single string,
    or as a single string creation and one "stable" hadron. Such processes
    are described by RRR diagram of Reggeon phenomenology.
  o Introduced new class G4QuarkExchange for implementation of the processes.
  o G4QGSParticipants: implementation of Quark exchange simulation.
  o Cleaned and improved G4SingleDiffractiveExcitation and
    G4QGSDiffractiveExcitation. Correction in G4SingleDiffractiveExcitation
    to treat h+N and Gamma + N diffraction.
  o Changed G4MesonSplitter probabilities UUbar DDbar (0.5, 0.5) to (0.8, 0.2)
    for gamma projectile.
- models/pre_equilibrium (hadr-pre-V10-02-09)
  o G4VPreCompoundFragment, G4PreCompoundEmission, G4PreCompoundFragment,
    G4PreCompoundNucleon: use Coulomb barrier from standard parameterisation
    instead of hard-coded one in computation of probability of a fragment
    emission.
  o G4PreCompoundEmission, G4VPreCompoundFragment, G4HETCFragment,
    G4PreCompoundIon and G4PreCompoundNucleon: changed identifier names. 
  o G4VPreCompoundFragment, G4PreCompoundFragment: minor performance
    improvement.
- models/radioactive_decay (radioactive_decay-V10-02-13)
  o G4RadioactiveDecay::LoadDecayTable: fixed unexpected behavior when decay
    file is not found.
- models/util (hadr-mod-util-V10-02-08)
  o Added new method SetDefinition() to G4Parton class, needed for
    implementation of quark exchange processes in QGSM.
- processes (hadr-proc-V10-02-00)                                            (*)
  o UCN processes: fixed incorrectly calculated MicroRoughness correction
    to absorption probability. Corrected calculation of refracted velocity
    after transmission.
- stopping (hadr-stopping-V10-02-01)
  o Added G4MuonMinusAtomicCapture process.

processes/optical                                op-V10-02-02
-----------------
- Fixed potential problem of photon stuck when traveling almost              (*)
  perpendicular to the surface normal. Addressing problem report #1888.

run                                              run-V10-02-36
---
- Added method GetParticleIterator() in G4VPhysicsConstructor and in         (*)
  G4VUserPhysicsList; make these methods const and protected in both classes.
  Moved static GetInstance() method in G4RNGHelper to be not inline.
  Moved initialisation of G4VUPLSplitter thread-local data to be inline
  along with generic template type. Removed explicit initialisation of
  thread-local data from workspaces, as now happening inline in
  G4TWorkspacePool.
  Fixing compilation/linking errors on clang-3.9 and XCode-8 on MacOS.
- G4GunManagerKernel: G4Exception is replaced with G4cout when the world
  volume is assigned at PreInit or Idle state.
- G4MTRunManager: GetNumberOfActiveThreads() returns size of the threads pool.
- Grouped #include statements in G4WorkerThread.

tracking                                         tracking-V10-02-04
--------
- G4AdjointSteppingAction: removed print information on the weight, when
  stopping reverse tracking for the implementation of the splitting of the
  reverse MC tracking.

visualization                                    vis-V10-02-21
-------------
- management (visman-V10-02-32):
  o G4VSceneHandler: in RequestPrimitives(), tidied and improved error
    message for the case that a polyhedron pointer is null.
  o G4VisManager: fixed inappropriate warning message in MT batch mode.
  o G4VViewer: fixed Coverity defects.
- modeling (modeling-V10-02-15):
  o G4PhysicalVolumeModel: improved efficiency for the case that there are
    no vis attributes modifiers. Added new operator<<().

data sets:
---------
- G4EMLOW-6.50:
  o Updated MicroElec files for faster performance.
- G4ENSDFSTATE-2.0:
  o Added floating level information as -,+X,+Y,+Z,... string.

examples                                         examples-V10-02-10
--------
- Updated documentation and reference outputs.
- advanced/air_shower (air_shower-V10-02-01)
- advanced/amsEcal (amsEcal-V10-02-01)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- advanced/gammaray_telescope (gammaraytel-V10-02-01)
  o Extended physics list to give the possibility to handle polarized
    gamma-rays.
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- advanced/iort_therapy (iort_therapy-V10-02-00)
- advanced/medical_linac (medical_linac-V10-02-00)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- advanced/microbeam (microbeam-V10-02-02)
  o Relaxed conditions on max step size and magnetic field parameters
    in DetectorConstruction.
- advanced/microelectronics (microelectronics-V10-02-02)
- advanced/nanobeam (nanobeam-V10-02-01)
- advanced/purging_magnet (purmag-V10-02-00)
- advanced/radioprotection (radioprotection-V10-02-00)
- advanced/underground_physics (DMX-V10-02-01)
- advanced/xray_fluorescence (XrayFluo-V10-02-01)
- advanced/xray_telescope (xraytel-V10-02-00)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- basic/B4 (exampleB4-V10-02-01)
  o Activated merging of ntuples.
- basic/B5 (exampleB5-V10-02-02)
  o Activated merging of ntuples.
  o Fix in gui.mac to replace undefined /globalField/setValue by
    /B5/field/value.
  o Updated B5ActionInitialization: event action is instantiated also on
    master thread; needed for ntuple merging.
- extended/analysis/AnaEx01 (AnaEx01-V10-02-03)
  o Activated merging ntuples
  o Updated main program according to basic examples.
- extended/analysis/AnaEx02 (AnaEx02-V10-02-02)
- extended/analysis/AnaEx03 (AnaEx03-V10-02-02)
  o Updated main program according to basic examples.
- extended/biasing/B03 (B03-V10-02-01)
- extended/biasing/ReverseMC01 (ReverseMC01-V10-02-00)
- extended/electromagnetic/TestEm0 (testem0-V10-02-06)
- extended/electromagnetic/TestEm1 (testem1-V10-02-08)
- extended/electromagnetic/TestEm2 (testem2-V10-02-04)
- extended/electromagnetic/TestEm3 (testem3-V10-02-06)
- extended/electromagnetic/TestEm4 (testem4-V10-02-05)
- extended/electromagnetic/TestEm5 (testem5-V10-02-06)
- extended/electromagnetic/TestEm6 (testem6-V10-02-02)
- extended/electromagnetic/TestEm7 (testem7-V10-02-04)
- extended/electromagnetic/TestEm8 (testem8-V10-02-04)
- extended/electromagnetic/TestEm9 (testem9-V10-02-02)
- extended/electromagnetic/TestEm10 (testem10-V10-02-02)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- extended/electromagnetic/TestEm11 (testem11-V10-02-09)
  o Added alpha.mac and ionC12.mac input macros.
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- extended/electromagnetic/TestEm12 (testem12-V10-02-06)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- extended/electromagnetic/TestEm13 (testem13-V10-02-03)
- extended/electromagnetic/TestEm14 (testem14-V10-02-03)
- extended/electromagnetic/TestEm15 (testem15-V10-02-02)
- extended/electromagnetic/TestEm16 (testem16-V10-02-03)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- extended/electromagnetic/TestEm17 (testem17-V10-02-04)
  o HistoManager: fixed violation report in automatic checking of coding 
    guidelines.
- extended/electromagnetic/TestEm18 (testem18-V10-02-03)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- extended/eventgenerator/HepMC/MCTruth (mctruthex-V10-02-00)
- extended/eventgenerator/particleGun (particleGunExample-V10-02-03)
  o Changes to comply with coding conventions.
- extended/eventgenerator/pythia/decayer6 (p6decayer-V10-02-05)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
  o Removed svn:external in scripts.
- extended/exoticphysics/channeling (channelingExample-V10-02-03)
  o Removed GPS initialisation.
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- extended/exoticphysics/phonon (phononExample-V10-02-07)
- extended/exoticphysics/ucn (ExUCN-V10-02-01)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- extended/field/field01 (fieldex01-V10-02-03)
  o Replaced F01PhysicsList with FTFP_BERT with G4StepLimiterPhyiscs.
  o Updated READMEs.
- extended/field/field04 (fieldex04-V10-02-02)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- extended/geometry/transforms (exTransforms-V10-02-04)
  o Removed debug.mac macro.
- extended/hadronic/Hadr05 (exhadr05-V10-02-00)
  o Changes to comply with coding conventions.
- extended/hadronic/Hadr06 (exhadr06-V10-02-04)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- extended/hadronic/Hadr07 (exhadr07-V10-02-07)
  o Added alpha.mac and ionC12.mac input macros.
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- extended/hadronic/NeutronSource (NeutronSource-V10-02-00)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- extended/medical/dna/chem4 (chem4-V10-02-03)
  o The G-values are computed for a range of deposited energy [A;B]. 
    We are in an infinite volume. Therefore the energy lost by the 
    primary equals the deposited energy since all secondary particles 
    will finally slow down to the thermal energy. 
    The primary is killed once it has deposited more energy than the 
    minimum threshold A. When the particle looses more energy in few
    interaction steps than the maximum allowed thresold B, the event is 
    disregarded (=aborted).
    Note that if the upper boundary of the energy lost by the primary is 
    not set, the chemistry may take a lot of time to compute.  
  o Abort event if the energy lost by the primary is larger than a user
    chosen threshold.
  o Updated README and .README.txt for new UI commands.
- extended/medical/dna/dnaphysics (dnaphysics-V10-02-05)
  o PhysicsList: added comments.
- extended/medical/dna/microdosimetry (microdosimetry-V10-02-04)
- extended/medical/dna/range (range-V10-02-05)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- extended/medical/dna/svalue (svalue-V10-02-05)
  o Updated README.
- extended/medical/dna/wvalue (wvalue-V10-02-05)
- extended/medical/electronScattering (electronScattering-V10-02-03)
- extended/medical/electronScattering2 (exampleES2-V10-02-00)
- extended/medical/fanoCavity (fano-V10-02-02)
- extended/medical/fanoCavity2 (fano2-V10-02-01)
- extended/medical/GammaTherapy (gtherapy-V10-02-00)
- extended/optical/LXe (LXe-V10-02-01)
- extended/optical/wls (WLS-V10-02-01)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- extended/parallel/MPI (MPI-V10-02-02)
  o Porting of scoring merging to new G4StatDouble based hits.
- extended/parallel/ThreadsafeScorers (ThreadsafeScorers-V10-02-04)
- extended/parallel/TopC/ParN02 (ParN02-V10-02-00)
- extended/parameterisations/gflash (exgflash-V10-02-01)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- extended/parameterisations/Par01 (expar01-V10-02-01)
  o Changes to comply with coding conventions.
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- extended/parameterisations/Par02 (expar02-V10-02-01)
- extended/polarisation/Pol01 (expol01-V10-02-03)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- extended/radioactivedecay/rdecay01 (rdecay01-V10-02-08)
  o Added neutron.mac and proton.mac input macros.
- extended/radioactivedecay/rdecay02 (rdecay02-V10-02-01)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)

tests                                            tests-V10-02-10
-----
- Updated reference outputs and tools.
- tests/test01 (test01-V10-02-00)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- tests/test03 (test03-V10-02-07)
  o Updated test for merging ntuples.
- tests/test04 (test04-V10-02-09)
- tests/test07 (test07-V10-02-00)
- tests/test09 (test09-V10-02-00)
- tests/test10 (test10-V10-02-00)
- tests/test11 (test11-V10-02-03)
- tests/test13 (test13-V10-02-00)
- tests/test14 (test14-V10-02-01)
- tests/test16 (test16-V10-02-01)
- tests/test17 (test17-V10-02-01)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
- tests/test19 (test19-V10-02-04)
  o Added Barton data (SAS M6E) for validation of string models at high
    energies.
- tests/test23 (test23-V10-02-08)
  o Added provisions to include kaon beam, Barton data (SAS M6E).
- tests/test25 (test25-V10-02-00)
- tests/test27 (test27-V10-02-00)
- tests/test28 (test28-V10-02-00)
- tests/test31 (test31-V10-02-00)
- tests/test33 (test33-V10-02-00)
- tests/test34 (test34-V10-02-00)
- tests/test36 (test36-V10-02-02)
- tests/test37 (test37-V10-02-01)
- tests/test41 (test41-V10-02-00)
- tests/test46 (test46-V10-02-02)
- tests/test48 (test48-V10-02-02)
- tests/test50 (test50-V10-02-00)
- tests/test53 (test53-V10-02-00)
- tests/test54 (test54-V10-02-00)
- tests/test55 (test55-V10-02-00)
- tests/test58 (test58-V10-02-00)
- tests/test60 (test60-V10-02-01)
- tests/test61 (test61-V10-02-00)
- tests/test65 (test65-V10-02-06)
- tests/test67 (test67-V10-02-00)
- tests/test73 (test73-V10-02-00)
- tests/test74 (test74-V10-02-00)
  o Replaced direct use of 'aParticleIterator' with GetParticleIterator().   (*)
