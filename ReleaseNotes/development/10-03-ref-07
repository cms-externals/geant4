
                       geant4-10-03-ref-07
                       ===================

Major development/fixes included since the last development tag are:

 o Added support for HDF5 in analysis tools.
 o Enabled wrappers to VecGeom for G4Para and G4CutTubs shapes.
 o Added tagging of atomic de-excitation products in DNA ionisation models.
 o Enabled correlated gamma simulation as default for radioactive decay physics.
 o Added handling of nuclear polarization for simulation of correlated gamma
   emission in G4PhotonEvaporation.
 o Improved process probability parameterizations for Pi - Nucleon interactions
   in FTF model and introduced smearing of resonance masses.

---------- Reference-tag 'Release Notes' -----------

(*)  Fixes included in release 10.3.p02

Summarised, the list of changes is the following:

cmake                                            cmake-V10-03-28
-----
- Modules/Geant4OptionalComponents.cmake: added CTUBS and PARA flags to enable
  wrapping of G4CutTubs and G4Para for VecGeom in GEANT4_USOLIDS_SHAPES.
- Modules/G4ConfigureGNUMakeHelpers, Modules/Geant4InterfaceOptions.cmake:   (*)
  corrected Qt setup for GNUmake builds, avoid setting QTLIBS and GLQTLIBS
  as already handled by the GNUmake system for Qt4 and Qt5.
- Modules/FindStatTest.cmake: fixed logic for setting statistical test suite.

config                                           config-V10-03-04
------
- geomconf.gmk: added selectors for G4GEOM_USE_UCTUBS and G4GEOM_USE_UPARA
  flags, to enable wrapping of G4CutTubs and G4Para for VecGeom.
  Updated flags for Scalar build of VecGeom.

analysis                                         analysis-V10-03-07
--------
- Updated to g4tools 3.3.0: added support for HDF5, improved tests.
  See History_tools for the complete list of modifications.
- Moved common implementation from G4V[R]NtupleManager in new
  G4Base[R]NtupleManager classes.
- Introduced G4TRNtupleDescription, G4TRNtupleManager template classes.
- Always create an ntuple from ntuple booking (removed usage of
  ntupel::create_column).
- Added an optional directoryName argument in Read[Hn][Pn][Ntuple] functions
  in G4VAnalysisReader (needed for HDF5).

geometry
--------
- magneticfield (field-V10-03-08)
  o Fixed initialisation of coefficients in G4FSALBogackiShampline45 in
    method PrepareConstants() called by constructor.
  o Fixed significant emory leak in G4DormandPrinceRK56, in method
    SetupInterpolate_low(); improved initialisation of data.
  o G4BogackiShampine23: fixed initialisation of data and suppressed duplicate
    method isFSAL(), as existing in base class G4MagIntegratorStepper.
    Made copy constructor and equal operator private and not unimplemented.
  o Fixed Coverity defects in several classes.
- solids/CSG (geom-csg-V10-03-33):
  o G4Box: minor optimisation in DistanceToOut(p).
  o G4Para: optimisation in Inside(), DistanceToIn/Out(p), use std::abs(xx)
    in place of std::max(xx,-xx).
  o Removed clone class G4OTubs no longer necessary and removed inheritance
    from G4Tubs for G4CutTubs.
  o Improved calculation of bounding-box in G4CutTubs.
  o Added VecGeom wrappers for G4CutTubs and G4Para. Enabled adapter for
    G4USphere wrapper.
  o Use G4RandomRadiusInRing() in G4CSGSolid::GetRadiusInRing().
- solids/specific (geom-specific-V10-03-11):
  o G4EllipticalCone: reviewed implementation of Inside(), DistanceToIn/Out(p),
    SurfaceNormal() and GetPointOnSurface(); made more compact and performant.
    Addressing problem report #1974.
    Improved GetPointOnSurface() to have uniform sampling of points, using
    function G4RandomPointOnEllipse().

global                                           global-V10-03-10
------
- Added G4RandomRadiusInRing(), G4RandomPointInEllipse(),
  G4RandomPointOnEllipse() and G4RandomPointOnEllipsoid() to functions
  collection in G4RandomTools.hh.

persistency/gdml                                 gdml-V10-03-04
----------------
- Added commands to G4GDMLMessenger for enable/disable stripping of names
  for reading and for appending or not pointers to names for writing.

physics_lists
-------------
- constructors/decay (phys-ctor-decay-V10-03-04)
  o G4RadioactiveDecayPhysics: enabled correlated gamma simulation as default.
- constructors/hadron_inelastic (phys-ctor-hinelastic-V10-03-01)
  o Refactored code for FTFP_BERT and register physics builders.
- lists (physics-lists-V10-03-03)
  o Added __SS option to g4alt::G4PhysListFactory.
  o Allow g4alt factory to use bare physics constructor names as things to
    replace/add as well as the shorter predefined extensions (e.g."EMX").
  o Code formatting.

processes/biasing                                procbiasing-V10-03-02       (*)
-----------------
- G4ImportanceConfigurator: removed debug printout in destructor.

processes/electromagnetic/dna                    emdna-V10-03-21
-----------------------------
- Added tagging of atomic de-excitation products in the ionisation models.

processes/electromagnetic/utils                  emutils-V10-03-11
-------------------------------
- Mark as 'override' ProcessDescription() method in G4VEmProcess,
  G4VEnergyLossProcess and G4VMultipleScattering.

processes/hadronic
------------------
- models/abrasion (had-abrasion-V10-03-02)
  o Fixed Coverity defect in G4WilsonAbrasionModel.
- models/de_excitation (hadr-deex-V10-03-43)
  o G4DeexPrecoParameters: restore Get/SetInternalConversionFlag() methods; 
    flag set to true by default. Use flag for internal conversion in
    G4PhotonEvaporation; for radioactive decay do not sample transition
    if no transition information is available.
    Added dummy variant of de-excitation when excitation energy transformed
    to kinetic energy of a fragment and no secondaries are produced; added
    also method to disable both precompound and de-excitation sampling.
  o G4ExcitationHandler: implemented dummy variant of de-excitation.
  o G4PhotonEvaporation: added handling of nuclear polarization for
    simulation of correlated gamma emission. Fixed problem of data race.
  o G4PolarizationTransition: added new interface SampleGammaTransition(),
    which replaced 4 old methods. Use this new method in G4GammaTransition.
  o G4PhotonEvaporation, G4GammaTransition, G4PolarizationTransition: improved
    debug printout. Cleanup creation and deletion of G4NuclearPolarization
    objects.
- models/lend (hadr-lend-V10-03-07)                                          (*)
  o Fixed Coverity defects.
- models/particle_hp (hadr-hpp-V10-03-04)                                    (*)
  o G4ParticleHPThermalScattering: fixed angular distribution sampling problem.
    Addressing problem report #1971.
- models/parton_string/diffraction (hadr-string-diff-V10-03-01)
  o Improved process probability parameterizations for Pi - Nucleon
    interactions. Good results are obtained for HARP data (p/Pi+/Pi- + A at
    3, 5, 8, 12 GeV/c) and for Pi N inclusive reactions.
- models/parton_string/hadronization (had-hadronization-V10-03-06)
  o G4ExcitedStringDecay: introduced smearing of resonance masses.
  o G4LundStringFragmentation: bug fixes related to rotating strings.
- models/parton_string/qgsm (hadr-qgsm-V10-03-04)
  o Fixed leak in G4QGSParticipants::GetList() for targets not deleted
    after interaction.
- models/radioactive_decay (radioactive_decay-V10-03-13)
  o G4RadioactiveDecay::BuildPhysicsTable(): removed all settings of photon 
    evaporation; now done in G4PhotonEvaporation and in physics list.
  o G4ITDecay: removed all manipulations of nuclear polarization in DecayIt(),
    now done in G4PhotonEvaporation.
- models/util (hadr-mod-util-V10-03-11)
  o G4Fragment: do not delete G4NuclearPolarization object; from now on, other
    classes are responsible for its allocation/deletion.
  o G4NuclearPolarizationStore: new class to handle G4NuclearPolarization
    objects for correlated gamma emission simulation.
- processes (hadr-proc-V10-03-00)
  o Use class name in process description.
- stopping (hadr-stopping-V10-03-00)
  o Fixed Coverity defect in G4AntiNeutronAnnihilationAtRest.
    Removed static thread-local variables and simply made them local.
- util (hadr-util-V10-03-05)
  o G4NuclearPolarization: added extra members and updated for correlated
    gamma emission.

processes/management                             procman-V10-03-02
--------------------
- Added virtual method ProcessDescription(std::ostream& outfile) to G4VProcess
  so that all processes can output a description to html documentation.

processes/solidstate/channeling                  channeling-V10-03-03
-------------------------------
- Fixed Coverity defects.

visualization                                    vis-V10-03-13
-------------
- management (visman-V10-03-13):
  o Implemented UI command /vis/drawOnlyKeptEvents.
    To draw selected events, the user should set this flag, then in a user
    action select the event to keep from G4EventManager according to a
    certain criterion.

examples                                         examples-V10-03-07
--------
- Updated documentation and reference outputs.
- extended/electromagnetic/TestEm18 (testem18-V10-03-03)
  o Revised implementation.
- extended/medical/dna/microyz (microyz-V10-03-01)
  o Updated setup according to recent developments.
  o Updated READMEs.
- extended/medical/dna/range (range-V10-03-01)
  o Reduced energy range in range.in macro.
- extended/radioactivedecay/rdecay01 (rdecay01-V10-03-09)
  o PhysicsList: enabled simulation of correlated gamma decay.
  o Added several macro files.
- extended/radioactivedecay/rdecay02 (rdecay02-V10-03-01)
  o PhysicsList: use G4EmStandardPhysics and G4EmExtraPhysics; defined EM
    parameters as it was in previous version of the example, disabled
    electro- and muon-nuclear.
  o Removed EmStandardPhysics and GammaPhysics.

tests                                            tests-V10-03-07
-----
- Updated reference outputs and tools.
- tests/test38 (test38-V10-03-00)
  o Fix some bit rot due to change in ParticleIterator.
  o Fix to CMake-Standalone script.
- tests/test55 (test55-V10-03-03)
  o General cleanup, including fixes for potential thread-safety issues.
