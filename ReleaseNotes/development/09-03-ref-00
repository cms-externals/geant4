
                       geant4-09-03-ref-00
                       ===================

Some of the development/fixes included since the last development tag are:

 o First full release of classes implementing the "Reverse MonteCarlo"
   technique.
 o New stepper G4NystromRK4 for magnetic field with analytic estimation of
   integration error; and new simple class G4CachedMagneticField to cache
   value of magnetic field, speeding up code when calculation of field value
   is relatively complex.
 o Revised optical boundary process and new data set for measured optical
   surface reflectance, RealSurface-1.0; path controlled by new flag
   G4REALSURFACEDATA.
 o Added ability of reading stopping power data files stored in G4LEDATA data
   set for low-energy EM processes; new data set G4EMLOW-6.9.
 o Improved FTF model for pion obsorption on nuclei; implemented charge-exchange
   for pn->np in elastic and inelastic interactions and pion absorption by a
   nucleon.
 o Changes to binary-cascade hadronic model to protects against cases of energy
   non-conservation.
 o Modifications to pre-compound hadronic model to properly handle
   CEM transition probabilities.
 o Revised advanced examples; new version of hadrontherapy and medical_linac
   an retired no longer supported Tiara, cosmicray_charging, radiation_monitor.


---------- Reference-tag 'Release Notes' -----------

(o)  Fixes included in release 9.2.p03

Summarised, the list of changes is the following:

config                                           config-V09-02-17
------
- Updated Configure script (Configure-V09-02-05) and internal scripts:
  o Added new data set for G4REALSURFACEDATA variable and updated G4LEDATA
    data set version.
  o Fixed detection of QtCore library; addressing problem report #1079.
  o Added flag to allow running with query options on non-interactive
    terminal. Resolves issue reported in Hypernews Install-and-Config #1213.
  o Corrected text for installation of g3tog4 module; cernlib is not required.
  o New simplified layout for queries and updated some defaults.
  o Removed query on analysi; now G4ANALYSIS_USE flag has to be set explicitely
    by the user, if necessary.
  o Added force build of zlib when WIN32 GL or Inventor vis drivers are built.
  o Removed of -s switch to sed in Qt.U to fix problem with Qt setup. 
- architecture.gmk: corrected inclusion of -lz for zlib.
- binmake.gmk: corrected inclusion of G4zlib library in link list for
  the case of global libraries.                                              (o)
  Added include paths to new CHIPS modules.
- G4VIS_USE.gmk: fixed dependency issues on WIN32-VC for gl2ps utility
  library in visualization.
- WIN32-VC.gmk: added "gd32.lib use32.lib" to OGLLIBS to fix problems of
  linking when G4LIB_BUILD/USE_WIN32_SESSION is not set.

digits_hits                                      digits_hits-V09-02-04
-----------
- Fixes for the way of counting the flux and current passing through         (o)
  a curved surface (cylinder and sphere surfaces).
- Added missing virtual keyword for qualification of CheckROVolume() and     (o)
  FindROTouchable() methods in G4VReadOutGeometry.

environments                                     envs-V09-02-02
------------
- G4Py: updated configuration script and wrappers to physics-lists.
- Momo: Updated documentation.

error_propagation                                error_propagation-V09-02-02
-----------------
- Corrected usage of G4ThreeVector constructor in G4ErrorMagFieldLimitProces.(o)

event                                            event-V09-02-05
-----
- New classes implementing the "Reverse MonteCarlo" technique:
  G4AdjointPosOnPhysVolGenerator, G4AdjointPrimaryGenerator and
  G4AdjointStackingAction.

geometry/magneticfield                           field-V09-02-08
----------------------
- New stepper G4NystromRK4 for magnetic field with analytic estimation of
  integration error. Greatly reduces number of field value per step.
- Added new virtual method CalculateRightHandSide() to G4MagIntegratorStepper
  for use in caching momentum (and field value) by G4NystromRK4
  Default implementation in G4MagIntegratorStepper calls RightHandSide().
- New simple class G4CachedMagneticField to cache value of magnetic field. 
  Speeds up code when calculation of field value is complex.
- Bug fix in G4EqEMFieldWithSpin and G4EqEMFieldWithEDM, following report    (o)
  on Hypernews EM-field forum #161.
- New G4EqEMFieldWithEDM class for RHS of EofM in a combined electric and
  magnetic field, with spin tracking for both MDM and EDM terms.
  Thanks to Kevin Lynch, Phys. Dept. at Boston University.

geometry/management                              geommng-V09-02-05
-------------------
- G4Region: added pointer to field-manager and associated accessor/modifier,
  to allow for association of a local field to a geometrical region.

geometry/navigation                              geomnav-V09-02-11
-------------------
- Refinements in G4PropagatorInField:
  o Changed parameters for treating consecutive tiny/zero steps (decrease    (o)
    factor to 0.25 from 0.1); the value is not used when the step size falls
    below a certain threshold. Added new member 'fZeroStepThreshold', to
    enable tuning of threshold for tiny/zero steps; this threshold is now
    changed, and expressed as a multiple of 'fZeroStepThreshold' instead of
    kCarTolerance. Changed the value given to the decrease factor to 0.35.
    Addresses a problem seen at boundary of volumes reported by ATLAS.
  o Activated field per region.
  o Improved printing of diagnostic messages.                                (o)
  o Added new method RefreshIntersectionLocator() to update state.           (o)
  o Deleted long obsolete methods: SetAccuraciesWithDeltaOneStep(),
    SetDeltaIntersection(), SetDeltaOneStep(). Revised implementation
    to avoid using the older methods.
- G4VIntersectionLocator: fixed problem in ReEstimateEndPoint() for very     (o)
  small steps. Corrected constructor to ensure that it initialises all data
  members. Labelled methods in header to make noticable those that must change
  attributes at every step.

geometry/solids/CSG                              geom-csg-V09-02-08
-------------------
- G4Cons: fix to DistanceToIn(p,v), added a check on the direction in case   (o)
  of point on surface. Fixes a problem of stuck tracks observed in CMS, due
  to wrong reply from the solid for points on the inner radius surface base
  with direction along the imaginary extension of the cone.
- G4Torus:fix in SolveNumericJT() in order to take in account the difference (o)
  in the value of theta for different intervals, [0:pi] or [-pi:0], and for
  SPhi in [0:twopi] or [-twopi:0]. Addresses problem report #1086.
- G4Orb: moved debug warning in DistanceToIn(p,v) within G4CSGDEBUG flag.    (o)

geometry/solids/specific                         geom-specific-V09-02-08     (o)
------------------------
- Avoid redundant assignment of value to 3-vector in G4PolyconeSide and
  G4TwistTubsSide.

global                                           global-V09-02-12
------
- G4PhysicsVector: cleaned up initialisation of cached values;
  simplified Value() method, now not looking into previous bin;
  added method ScaleVector() needed for ICRU'73 data.
  Fixed initialisation of 'lastEnergy' to allow for negative scale of energy. 
- Changed date for release 9.3.

intercoms                                        intercoms-V09-02-02
---------
- Fixed incorrect directory deletion of G4UIcommandTree::RemoveCommand().
  Addresses problem report #1087.
- Added method GetPreviousSession() in G4UIbatch.

interfaces                                       interfaces-V09-02-07
----------
- G4UIExecutive.cc: fixed issue of default argument to contructor for the
  selection of specific drivers.
- Fix to G4VBasicShell: commands strings that match some shorter commands
  are trimmed and executed as those shorter commands.
- G4UIQt: added CTRL+A and CTRL+E to move to begin/end of command line.
  Fixed a problem on macOSX 10.6 with Qt 4.6-Beta.
- Added debug flags for Qt.

materials                                        materials-V09-02-24
---------
- Increased flexibily of G4SurfaceProperty and G4OpticalSurface classes
  to allow for lookup-table boundary process simulations.
  Thanks to Martin Janecek and William Moses from LBNL
- New class G4IonStoppingData, which can read ion stopping power vectors
  contained in G4LEDATA data set; allows for inclusion of larger physics
  vectors than those in the ICRU 73 classes, where vectors are restricted
  to the maximum energy 10 MeV/nuc.
- G4IonisParamMat: fixed density effect computation; added plasma energy
  computation and access to G4DensityEffectData by the atomic number.
- G4DensityEffectData: added method GetIndex().
- G4VIonDEDXTable: added new method BuildPhysicsVector() which invokes the
  build of physics vectors on demand in the initialisation phase.
  Added method BuildPhysicsVector() according to base class for G4ExtDEDXTable,
  G4SimpleMaterialStoppingICRU73, G4MaterialStoppingICRU73 and
  G4IronStoppingICRU73.
- G4MaterialStoppingICRU73: changed material name from G4_NYLON-6/6 to
  G4_NYLON-6-6.
- G4NIstMessenger: fixed minor memory leak at destruction.
- G4NistMaterialBuilder: changed material names, G4_NYLON-6/6 to G4_NYLON-6-6,
  and G4_NYLON-6/10 to G4_NYLON-6-10, to allow matching with ion stopping power
  data files, which have material name in the file name.
  Old names can still be used for backward compatibility. 
- Improved comments to ICRU73 classes.

particles                                        particles-V09-02-17
---------
- Added new classes for "Reverse MonteCarlo" technique: G4AdjointProton and
  light ions.

persistency/ascii                                ascii-V09-02-10
-----------------
- Inclusion of extruded and tessellated solids.
- Additions of accessors and constructors of G4tgbVolume and G4tgrVolume.

persistency/gdml                                 gdml-V09-02-18
----------------
- Updated list of optical properties in G4GDMLReadSolid according to
  last changes to G4OpticalSurface and G4SurfaceProperty.

physics_lists                                    phys-lists-V09-02-46
-------------
- Added G4OpticalPhysics and G4OpticalPhysicsMessenger classes.
- G4EmStandardPhysics_option3, G4EmLivermorePhysics, G4EmPenelopePhysics,
  G4EmLivermorePolarizedPhysics: added G4NuclearStopping process for 
  GenericIon, He3, alpha particles. Set finalRange=10um for ions.
- G4EmStandardPhysics_option2: use default StepFunction for ions.
- Added two builders G4QNeutrinoPhysics & G4QPhotoNuclearPhysics with
  the messenger to the CHIPS physics list. Arranged dependencies with CHIPS.
- Updated QBBC physics-list and fixed cross-section for hadron elastic.
- QGSP_BERT_TRV: changed transition energies to use BERT ]0,9.9],
  LEP [9.5, 15] and QGSP [10, inf[.
- QGSP_INCL_ABLA: fix to use Bertini cascade for kaons in the energy
  range [0 - 10].
- QGSP_BERT_NOLEP: use G4HadronQElasticPhysics  
- Added initial version of G4IonQMDPhysics.    
- Fixed typo in FTFP_EMV for wrong call to G4WarnPLStatus.
- Explicitely marked experimental following lists: QGSP_BERT_EMX,
  QGSP_BERT_TRV, QGSP_FTFP_BERT, QGSP_INCL_ABLA.
  Marked as obsolete: FTFP, QGSP, QGSC, QGSC_CHIPS, QGSC_EMV, QGSC_QGSC.
  Marked as supported: FTFP_BERT, FTFP_BERT_EMV.
- Updated list of supported  physics-lists in G4PhysicsListFactory.

processes/cuts                                   procuts-V09-02-08
--------------
- Added new command /cuts/setMaxCutEnergy to messenger. 

processes/electromagnetic/adjoint                emadjoint-V09-02-02
---------------------------------
- New revised electromagnetic processes for "Reverse MonteCarlo" technique.
  All e- processes have been improved and adjoint proton and ion ionisation
  have been added. The use of adjoint cross section matrices can be now
  limited only to e- Ionisation and Ion ionisation. 

processes/electromagnetic/highenergy             emhighenergy-V09-02-03
------------------------------------
- G4AnnihiToMuPair: added method CrossSectionPerVolume(); added integral
  option to PostStepDoIt(), providing more precise simulation near cross
  section threshold.
- G4eeTo3PiModel: fixed vector product in matrix element.

processes/electromagnetic/lowenergy              emlowen-V09-02-69
-----------------------------------
- G4IonParametrisedLossModel: moved from original ICRU 73 classes to new class
  (G4IonStoppingData), which is capable of reading stopping power data files
  stored in G4LEDATA data set; with the new tables the upper energy limit of
  ICRU 73 stopping powers is increased to 1 GeV/nucleon. 
  Decision logic concerning stopping power scaling for heavy ions was entirely
  moved to class G4IonDEDXScalingICRU73.
  Introduced function for switching off scaling for heavy ions.
  Added set-function for loss limit parameter. Added UpdateRangeCache()
  method, removed GetRange() method.
  Changed energy loss limit to smaller value (from 0.15 to 0.01) to avoid
  approximative loss description in case of large steps.
  Removed nuclear stopping from model since dedicated process is available in
  standard EM package. Minor fixes applied in energy loss computation.
- G4VIonDEDXScalingAlgorithm: introduced additional argument for energy scaling
  function. G4IonDEDXScalingICRU73, G4IonDEDXHandler: adapted function
  according to interface changes in G4VIonDEDXScalingAlgorithm.
- G4IonDEDXHandler: using new build methods defined in G4VIonDEDXTable
- Withdrawn last PIXE changes.
- Added vapor water shell constants to G4DNARuddIonisationModel.
- Removed memory leak in G4DNACrossSectionDataSet.
- Added protection for secondary electron energy computation in
  G4DNABornIonisationModel. Proposed a faster computation of cross section
  max value.
- Requires new data set G4EMLOW-6.9.

processes/electromagnetic/muons                  emmuons-V09-02-08
-------------------------------
- G4MuBetheBlochModel: compute density effect correction using method of 
  G4IonisParamMat class applying revised parameterisation.
- G4MuMultipleScattering: use G4UrbanMscModel90 by default.

processes/electromagnetic/polarisation           empolar-V09-02-01
--------------------------------------
- Bug fix in G4PolarizationHelper::GetSpinInPRF() for wrong normalization of
  Y component.
- Bug fix in G4PolarizedAnnihilationModel::PostStepDoIt() for wrong treatment
  in error check.
- Bug fix in G4StokesVector::RotateAz() for wrong usage of vector product.

processes/electromagnetic/standard               emstand-V09-02-36
----------------------------------
- Added new G4alphaIonisation process.
- G4ICRU49NuclearStoppingModel: new model providing computation of nuclear
  stopping.
- G4CoulombScatteringModel: fixed relativistic formula.
- G4NuclearStopping: updated process for computation of nuclear stopping.
- G4BetheBlochModel: minor speedup inside CorrectionsAlongStep() method.
- G4BetheBlochModel, G4BraggModel, G4BraggIonModel: removed computations
  of nuclear stopping power, some CPU speadup.
- G4BetheBlochModel, G4MollerBhabhaModel: compute density effect correction
  using method of G4IonisParamMat class, applying revised parameterisation.
- G4GoudsmitSaundersonMscModel: tuned small angle theta distributions
  assuming the case of lambdan<1 as single scattering regime; tuned theta
  sampling for theta below the screening angle.
- Set 'linLossLimit'to 0.02 in G4ionIonisation.

processes/electromagnetic/utils                  emutils-V09-02-24
-------------------------------
- G4EmCalculator: added method FindIon(); improved computation for ions
  allowing to be applied for the model based on ICRU'73. Take into account
  CorrectionAlongStep for ions. Fixed bug in selection of models.
- G4VEmProcess: improved printout.

processes/hadronic
------------------
- cross_sections (hadr-cross-V09-02-18)
  o Use as a default hadron-nucleon cross section parameterisation
    in G4GlauberGribovCrossSection, G4GGNuclNuclCrossSection,
    G4NeutronElasticXS, G4NeutronInelasticXS, G4BGGNucleonElasticXS,
    G4BGGNucleonInelasticXS, G4BGGPionElasticXS, G4BGGPionInelasticXS
  o Bug fixes for G4BGGXX classes and added new classes G4NeutronElasticXS,
    G4NeutronInelasticXS, G4NeutronCaptureXS.
  o Modified upper limit of validity to 100 TeV in G4PiNuclearCrossSection,
    G4NeutronInelasticCrossSection and G4ProtonInelasticCrossSection.
    Use constant cross-section above original range.
  o G4TripathiLightCrossSection: re-enable low energy check code.            (o)
  o G4CrossSectionDataSetRegistry: fix for more accurate cross-section       (o)
    deletion.
- management (hadr-man-V09-02-05)
  o G4HadronicProcessStore: added protection in Clean() method.              (o)
- models/abrasion (had-abrasion-V09-02-00)                                   (o)
  o Fixed problems of negative sqrt() and made code more robust to potential
    while-loop problems.
- models/binary_cascade (had-binary-V09-02-06)
  o Changes to G4BinaryCascade to protects against energy non-conservation:
    shift of particle's formation times; inclusion of captured particles;
    correction in GetExcitationEnergy() for the case when all nucleons are
    ejected; correction for the nuclear field for baryons.
  o Bug fix in G4BinaryCascade::ApplyCollision(): decay products outside
    nucleus were nevertheless counted in currentZ/A as if these were within
    nucleus.
  o Corrected assignment to 3-vector, avoid use of 3vector=0.
  o Added protection against void nucleus after cascade.
- models/cascade (hadr-casc-V09-02-11)
  o G4CascadParticle, G4InuclElementaryParticle: added integer argument to
    constructor to indicate which generation cascade particle belongs to.
    Changed G4NucleiModel and G4BertiniNucleiModel to use this.
  o Fixed trivial compilation warnings on Windows/VC7.
- models/chiral_inv_phase_space (hadr-chips-V09-02-31)
  o Added diffraction to CHIPS inelastic.
  o Bug fixes in G4QSynchRad, G4QPhotonNuclearCrossSection and
    G4QDiffractionRatio; added 'MinGamma' parameter to G4QSynchRad.
  o Bug fix in G4QNeutronCaptureRatio (Cu65): accelerate CuSc by 1.5.
    (hadr-chips-cs-V09-02-00)
  o Reorganised CHIPS classes in sub-modules: body, cross_sections,
    fragmentation, interface and processes. (hadr-chips-body-V09-02-16)
  o Parameters tuning to speed-up.
- models/coherent_elastic (hadr-cohe-V09-02-03)
  o Modified dependency to CHIPS after sub-module splitting.
- models/de_excitation (hadr-deex-V09-02-23)
  o Updated nearly all classes of GEM sub-package with the introduction
    of new classes G4GEMCoulombBarrier, G4AlphaGEMCoulombBarrier,
    G4DeuteronGEMCoulombBarrier, G4He3GEMCoulombBarrier,
    G4ProtonGEMCoulombBarrier, G4TritonGEMCoulombBarrier and corresponding 
    changes in other classes of the sub-package.
    Fixed usage of units inside G4GEMProbability computations.
  o Fix in G4GEMProbability and G4GEMChannel to provide same probability as
    proposed in original papers. Fixed old problem in G4GEMChannel, computation
    of Coulomb barrier was not consistent with G4GEMProbability.
    Added protection on unphysical initial state in G4GEMChannel.
  o Fixed G4ExitationHandler for the case when Fermi-BreakUp 
    and multi-fragmentation model are activated.
  o Retuning for IAEA spallation data fission parameters in G4FissionParameters
    and G4FissionLevelDensityParameter.
  o Improved implementation of Gamma function computation in configuration
    weight inside G4FermiConfiguration.
  o Added a G4NeutronRadCapture model, a simple 1 gamma emission with
    4-momentum balance.
  o Updated ablation largely to comply with updates in G4Evaporation and
    handling of G4Fragment; fixed a bug in fragment identification when
    evaporation isn't used.
- models/im_r_matrix (hadr-im_r-V09-02-02)
  o Fix in G4CollisionComposite reproducibility. Removed dependence of the
    energy grid of the cross-section set on the order of the particles by
    forcing heavier particle to be at rest when caching the cross section.
  o Reduced usage of strings; maps of cross-sections use G4Particledefinition
    in place of particle name.
- models/incl (hadr-incl-V09-02-08)
  o Bug fixes to INCL nuclear potential handling; the interpolation function
    used to produce discontinuous results due to an array index off-by-one.
    This bug fix corrects the impact parameter distribution.
  o Fixed several variable initialization and F77 to C++ translation issues
    in INCL, and added a safeguard against attempts to compute the logarithm
    of zero.
  o Fixed several cases of division by zero and negative sqrt().
  o Use centralised random number generator instead of built-in one.
  o Corrected datatype problem in INCL initialization.
  o Corrected G4InclAblaLightIonInterface error handling: in case INCL is
    unable to produce a valid cascade it will return the original projectile
    particle back, and avoid returning NULL pointer for particle-definition.
  o Minor fix in the INCL particle reflection time calculation.
- models/management (hadr-modman-V09-02-08)
  o G4V3DNucleus: added two functions to sort nucleons along +/- Z.
  o Fix in G4HadronicInteractionRegistry for more accurate model deletion.   (o)
- models/parton_string (hadr-prtn-V09-02-09)
  o Implemented charge-exchange for pn->np in elastic and inelastic
    interactions simulated by FTF. Implemented also pion absorption by a
    nucleon.
  o Fixed bug in G4VLongitudinalStringDecay for the calculation of
    formation/creation time, c_light was inserted. Due to this string
    tension parameter was set to the usual value (1 GeV/fm) in
    G4LundStringFragmentation.
  o Improved FTF model for pion obsorption on nuclei: introduced status of
    nuclear nucleon involved in an interaction (Status 0 - spectator,
    1 - involved nucleon, 2 - absorbed nucleon); introduced connection between
    a participant nucleon and a nuclear nucleon in G4InteractionContent.
  o Completed FTF model with reggeon cascade and added excitation energy
    calculation. (hadr-string-diff-V09-02-23)
  o Tuned FTFP with parameters of nuclear de-excitation.
  o G4VParticipants: use modified name of method to sort nucleons in
    G4V3DNucleus.
- models/photolepton_hadron/muon_nuclear (hadr-munuclear-V09-02-03)
  o Code cleanup.
- models/pre_equilibrium (hadr-pre-V09-02-07)
  o G4PreCompoundModel: CEM transition probabilities are set by default.
  o G4PreCompoundTransitions: CEM transition probabilities have been
    renormalized (transitions with Delta N=+2 are increased by factor 5).
  o G4PrecompoundEmission: modified AngularDistribution() to avoid floating
    point exceptions. Removed calls to log() in rho() and replaced by use of
    new logfactorial().
- models/qmd (hadr-qmd-V09-02-03)
  o Fixed bug for incidence of neutral particles in G4QMDReaction and
    G4QMDGroundStateNucleus; verified for nucleon-nucleus interactions.
  o Beta version of code for enabling meson oncidence.
- models/rpg (hadr-rpg-V09-02-01)
  o G4RPGInelastic: added temporary message stating the RPG model is
    under development and should not be used for production.
- models/theo_high_energy (had-theo-HE-V09-02-03)
  o Modified dependency to CHIPS after sub-module splitting.
- models/util (hadr-mod-util-V09-02-04)
  o Restored methods for storing/retrieving G4SplitableHadron*, now in use
    in FTF model.
  o Corrected assignment to 3-vector, avoid use of 3vector=0.
  o G4WilsonRadius: data vector r[] made static const.
  o G4NuclearFermiDensity: added protection to GetDeriv() for positions far 
    outside the nucleus causing an FP overflow in exp().
- stopping (hadr-stopping-V09-02-04)
  o G4PiMinusAbsorptionAtRest, G4KaonMinusAbsorptionAtRest: fixed usage of   (o)
    3vector constructor.

processes/optical                                op-V09-02-06
-----------------
- Added capability of simulating surface reflections with Look-Up-Tables (LUT)
  containing measured optical reflectance for a variety of surface treatments.
  Requires new data set RealSurface-1.0 controlled by flag G4REALSURFACEDATA.
  Courtesy of M.Janecek and W.Moses (LBNL).
- G4OpBoundaryProcess: added initialization of 'theReflectivity' and
  'theEfficiency' at the beginning of the PostStepDoIt(); added method
  BoundaryProcessVerbose() which will now print the process status for
  every call to PostStepDoIt().
  Change in PostStepDoIt() so that all dielectric_dielectric surfaces may now
  have a reflectivity <1; not only 'frontpainted' as was the case in the past.

run                                              run-V09-02-09
---
- New classes implementing the "Reverse MonteCarlo" technique:
  G4AdjointSimManager, G4AdjointSimMessenger, G4AdjointPrimaryGeneratorAction.
- Fixing two minor bugs in G4RunManager and G4RunManagerKernel for the
  dump printout of regions.

tracking                                     tracking-V09-02-07
--------
- New classes implementing the "Reverse MonteCarlo" technique:
  G4AdjointCrossSurfChecker and G4AdjointSteppingAction.
- G4Trajectory, G4SmoothTrajectory, G4RichTrajectory: added initial
  kinetic energy. G4RichTrajectory: added final kinetic energy.
  G4RichTrajectoryPoint: added "remaining energy" at each step and attributes.

visualization                                    vis-V09-02-12
-------------
- management:
  o Many small bug fixes.
  o Enhanced functionality for gMocren driver: introduced the concept of
    end-of-run model.
  o Allow for arbitrary viewer deletion (fixes a case of crash).
- HepRep:
  o Changed messenger to a singleton.
  o Added messenger commands to HepRepFile.
  o Render G4Tubs as polygons if G4Tubs is not at a standard angle.
- OpenGL: fixed build problem with gl2ps on Windows.
- OpenInventor: fixed build problem with gl2ps on Windows.
- externals (visexternal-V09-02-06):
  o gl2ps: Added dependency on zlib if G4LIB_BUILD_ZLIB is set.
  o Corrected setup for building DLLs on Windows.
- RayTracer:
  o Fix for problem report #1072.

data sets
---------
- G4EMLOW-6.9:
  o Removed data for PIXE.
- RealSurface-1.0:
  o New data of optical reflectance for a variety of surface treatments.
    Absolute path controlled by environment flag G4REALSURFACEDATA.

examples                                         examples-V09-02-11
--------
- Updated reference outputs.
- Retired advanced examples: cosmicray_charging, radiation_monitor, Tiara.
- advanced/air_shower (air_shower-V09-02-06)
  o Changed UltraPhysicsList to use new processes G4eMultipleScattering,
    G4MuMultipleScattering and G4hMultipleScattering.
- advanced/brachytherapy (brachy-V09-02-02)
  o Updated physics-list and analysis setup.
- advanced/composite_calorimeter (ccal-V09-02-01)
  o Use QGSP_BIC_EMY as default physics-list to test the low-energy EM.
- advanced/gammaray_telescope (gammaraytel-V09-02-01)
  o Updated physics-list setup.
- advanced/hadrontherapy (hadrontherapy-V09-02-40)
  o Added ability to use command based scoring; IAEA geometry: now can produce
    Bragg peak using command based scoring
  o Additional data extracted from E. Haettner's thesis.
  o Added G4RadiactiveDecayPhysics class to the physics-list.
  o Correction in the initialization of the passiveProtonBeamLine class.
  o Now the HadrontherapyDetectorConstruction class implements only phantom
    and detector [RO]geometry. World volume and the rest of the geometry is
    inside another class whose messenger allows for modification by users with
    the same old syntax.
  o Added possibility to make a graphical user interface (GUI) using the QT
    libraries.
  o Added some functionalities in order to change, via messengers, geometry, 
    voxelization of the detector and disposition in the space of the
    detector/phantom.
  o Added possibility to calculate the stopping powers for ions.
  o Various additions and fixes to the matrix class.
  o Updated the README file and general code revision.
- advanced/lAr_calorimeter (lAr_calorimeter-V09-02-01)
  o Use QGSP_BIC_EMY as default physics-list to tests the low-energy EM.
  o Fixed problem in GNUmakefile.
- medical_linac (medical_linac-V09-02-05)
  o New release of the example: updated physics models and deleted old and
    no longer supported processes; added possibility to activate the physics
    lists and reference physics-lists directly via UI command; added
    possibility to set cuts and max allowed step lenghts via UI commands.
  o Fixed problem in GNUmakefile.
- advanced/radioprotection (radioprotection-V09-02-04)
  o Updated physics-lists setup.
  o Changed analysis output format to XML.
- advanced/Rich (Rich-V09-02-01)
  o Added possibility to use QGSP_BIC_EMY as physics-list; by default,
    the example's physics-list is used still.
- advanced/xray_fluorescence (XrayFluo-V09-02-01)
  o Migrated physics-list to new low-energy processes design
  o Migrated XrayFluoDataSet to meet new specifications in G4VEMDataSet.
- advanced/xray_telescope (xraytel-V09-02-01)
  o Updated and simplified physics-list.
- extended/analysis/A01 (exampleA01-V09-02-02)
  o A01DetectorConstruction, A01MagneticField: improved handling of field.
    Addresses problem report #1012.
  o Removed A01Trajectory, to now use default G4Trajectory.
  o Update physics-list to use new multiple scattering classes.
    Changed hMultipleScattering to MuMultipleScattering in A01MuonPhysics.
  o Introduced use of G4UIExecutive.
  o General update to README.
- extended/biasing (exbiasing-V09-02-00)
  o New example ReverseMC01 (ReverseMC01-V09-02-02), demonstrating the use
    of Reverse MonteCarlo technique in Geant4.
- extended/electromagnetic/TestEm0 (testem0-V09-02-01)
- extended/electromagnetic/TestEm1 (testem1-V09-02-01)
- extended/electromagnetic/TestEm2 (testem2-V09-02-02)
  o Replaced obsolete G4MultipleScattering in PhysListEmStandard.
- extended/electromagnetic/TestEm3 (testem3-V09-02-02)
  o Replaced obsolete G4MultipleScattering in PhysListEmStandard.
  o Removed G4EMConfigurator in physics-list.
- extended/electromagnetic/TestEm5 (testem5-V09-02-07)
  o Replaced obsolete G4MultipleScattering in PhysListEmStandard.
  o New local physics-list PhysListEmStandardGS.
  o Removed G4EMConfigurator in physics-list.
- extended/electromagnetic/TestEm6 (testem6-V09-02-01)
  o Added StackingAction to allow for removal of secondary particles.
  o Updated physics-list.
- extended/electromagnetic/TestEm7 (testem7-V09-02-04)
  o Renaming of IDs in PhysicsList.
  o Removed obsolete G4MultipleScattering in PhysListEmStandardNR  
  o Use Livermore and Penelope builders from reference physics-lists library.
  o Fixed compilation warnings on SLC5 and corrected disclaimer on some files.
  o Updated README and macro files.
- extended/electromagnetic/TestEm9 (testem9-V09-02-00)
  o Changed options: 20bins/decade; LinLossLimit=default=0.01.
- extended/electromagnetic/TestEm10 (testem10-V09-02-00)
  o Updated physics-list.
- extended/electromagnetic/TestEm11 (testem11-V09-02-01)
- extended/electromagnetic/TestEm12 (testem12-V09-02-01)
  o Replaced obsolete G4MultipleScattering in PhysListEmStandard.
- extended/electromagnetic/TestEm13 (testem13-V09-02-01)
- extended/electromagnetic/TestEm14 (testem14-V09-02-01)
  o Added new Livermore and Penelope physics-lists.
- extended/electromagnetic/TestEm15 (testem15-V09-02-00)
  o Introduced MuMultipleScattering in PhysListEmStandard.
- extended/electromagnetic/TestEm16 (testem16-V09-02-00)
  o Introduced Mu and eMultipleScattering in PhysListEmStandard.
- extended/electromagnetic/TestEm18 (testem18-V09-02-04)
  o Some cosmetics in low-energy physics-lists.
- extended/field/field01 (fieldex01-V09-02-00)
- extended/field/field02 (fieldex02-V09-02-00)
- extended/field/field03 (fieldex03-V09-02-00)
  o Fixed density of STP Carbon Dioxide in DetectorConstruction.
- extended/field/field04 (fieldex04-V09-02-03)
  o Changed F04PhysicsList and F04PhysicsListMessenger to use G4PhysListFactory.
- extended/field/field05 (fieldex05-V09-02-00)
  o New example demonstrating usage of 'spin' in electric-field to cancel
    g-2 precession.
- extended/hadronic/Hadr01 (exhadr01-V09-02-03)
  o Updated physics-list choice according to new configuration.
- extended/medical/DICOM (DICOM-V09-02-03)
  o Changed DICOM Handler to read CT files coming from CONQUEST DICOM server.
- extended/medical/electronScattering (electronScattering-V09-02-03)
  o Replaced obsolete G4MultipleScattering in PhysListEmStandard and
    PhysListStandardGS.
- extended/medical/electronScattering2 (exampleES2-V09-02-01)
  o New example for simulation of precision electron scattering benchmark
    with minimal user code.
- extended/medical/fanoCavity (fano-V09-02-03)
- extended/medical/fanoCavity2 (fano2-V09-02-01)
  o Replaced obsolete G4MultipleScattering in PhysListEmStandard_option3.
- extended/medical/GammaTherapy (gtherapy-V09-02-00)
  o Updated physics-list for EM.
- extended/optical/LXe (LXe-V09-02-01)
  o Exhibit the usage of a complex index of refraction for the photo cathode.
  o Use of G4OpticalPhysics builder/messenger, instead of LXeOpticalPhysics.
- extended/optical/wls (WLS-V09-02-02)
  o New example for optical physics simulating the propagation of photons
    inside a Wave Length Shifting (WLS) fiber.
- extended/persistency/P03 (exampleP03-V09-02-02)
  o Use G4XMultipleScattering in physics-list.
- extended/polarisation/Pol01 (expol01-V09-02-00)
  o Updated multiple-scattering physics.
- novice/N02 (exampleN02-V09-02-01)
- novice/N03 (exampleN03-V09-02-02)
  o Use G4MuMultipleScattering for muons; separated alpha from GenericIon.
- novice/N06 (exampleN06-V09-02-01)
  o Use G4eMultipleScattering, G4MuMultipleScattering and
    G4hMultipleScattering instead of standard G4MultipleScattering.

tests                                            tests-V09-02-11
-----
- Updated reference outputs and tools.
- test11 (test11-V09-02-02)
  o Changed multiple scattering processes to particle-specific.
- test12 (test12-V09-02-07)
  o Added option to test QGS_BIC.
- test19 (test19-V09-02-09)
  o Added magnetic field and G4QCollision for G4QInelastic.
- test37 (test37-V09-02-05)
  o Updated physics-lists. Fixed option setup.
- test39 (test39-V09-02-03)
  o Excluded G4QCollision and renamed to G4QInelastic.
- test41 (test41-V09-02-03)
  o Substitute G4_GRAPHITE by G4_GRAPHITE_POROUS.
  o Updates to options names and scripts.
- test44 (test44-V09-02-02)
  o Added scripts: run.py, reader_test44-online.py.
- test49 (test49-V09-02-00)
  o New test for CHIPS inelastic nuclear interactions.
- test60 (test60-V09-02-05)
  o Renamed main file (and executable) from Test60 to test60
    to be conformed with all other tests.
  o Removed useless include files in physics-list.
- test61 (test61-V09-02-00)
  o Changed multiple scattering processes to particle-specific.
- test202 (test202-V09-02-01)
  o Introduced G4UIExecutive.
